{"version":3,"sources":["lib/utils/constants.js","lib/utils/actions.js","lib/components/QuarterBackCondition.js","lib/components/QuarterBackConditions.js","lib/utils/types.js","lib/components/QuarterBackActionCreate.js","lib/components/QuarterBackActionDelete.js","lib/components/QuarterBackActions.js","lib/components/QuarterBackHeader.js","lib/utils/arrays.js","lib/utils/fields.js","lib/utils/operators.js","lib/utils/values.js","lib/components/inputs/Optgroup.js","lib/components/inputs/Option.js","lib/components/inputs/Opt.js","lib/utils/inputs.js","lib/components/inputs/Select.js","lib/components/QuarterBackFields.js","lib/components/QuarterBackOperators.js","lib/components/inputs/Checkbox.js","lib/components/inputs/Checkboxes.js","lib/components/inputs/Radio.js","lib/components/inputs/Radios.js","lib/components/inputs/Separator.js","lib/components/inputs/Text.js","lib/components/inputs/Textarea.js","lib/components/QuarterBackInputs.js","lib/components/QuarterBackValues.js","lib/components/QuarterBackRule.js","lib/components/QuarterBackRules.js","lib/components/QuarterBackTitle.js","lib/components/QuarterBackGroup.js","lib/utils/conditions.js","lib/components/QuarterBack.js","lib/index.js","App.js","registerServiceWorker.js","index.js"],"names":["OPERATORS","id","meta","fieldTypes","multipleValuesAllowed","numberOfInputs","FIELD_INPUT_CHECKBOX","FIELD_INPUT_SELECT","getActionByType","type","action","display","title","groupAction","QB","ruleAction","getDefaultData","this","field","input","operator","value","fields","defaultCondition","rules","length","condition","QuarterBackCondition","handleClick","event","preventDefault","props","handleUpdate","styleClassMap","isActive","toUpperCase","className","addClass","addClassActive","QuarterBackConditionActive","onClick","React","QuarterBackConditions","conditions","map","index","key","defaultProps","getTypeByQB","types","find","QuarterBackActionCreate","handleCreate","getActionData","actionIconMap","QuarterBackActionRule","QuarterBackAction","QuarterBackActionGroup","actionIcon","getRuleActionIcon","getGroupActionIcon","getOtherActionIcon","actionAddClass","filterTypes","softFilterTypes","includes","addClassAction","addClassCreate","getActionAddClass","ActionIcon","getActionIcon","disabled","QuarterBackActionDelete","handleDelete","QuarterBackActions","actions","getActions","QuarterBackHeader","insertAt","items","item","slice","removeAt","filter","getFieldById","f","match","getFieldComponent","DefaultComponent","QBComponent","getDefaultOperatorsByField","operators","getOperatorById","Boolean","getAllOperatorsByField","getDefaultValue","defaultValue","undefined","fieldValuesLength","Array","isArray","values","multiple","getDefaultValueByField","from","getValue","rule","prevOperator","getInputValues","prepSelectValues","opts","deleted","label","labelFilter","v","Optgroup","Option","Opt","getInputPlaceholder","placeholder","placeholderMap","actualPlaceholder","getInputType","getInputValue","parseInputValue","str","n","Math","floor","Number","isFinite","String","isInteger","parseInt","Select","handleChange","target","options","option","selected","addInputClass","QuarterBackInput","QuarterBackSelect","onChange","QuarterBackFields","fieldId","defaultOperator","getDefaultOperatorByField","selectPlaceholder","QuarterBackOperators","operatorId","data","lang","fieldOperators","operatorDisplayOverrides","addOperatorsClass","addOperatorClass","QuarterBackOperator","replace","Checkbox","checked","getMultiValue","getSingleValue","valuePresent","softFilterValues","isChecked","QuarterBackCheckbox","Checkboxes","QuarterBackCheckboxes","checkbox","checkboxIndex","Radio","QuarterBackRadio","Radios","QuarterBackRadios","radio","radioIndex","Separator","inputsSeparator","numValues","QuarterBackInputSeparator","Text","QuarterBackText","Textarea","QuarterBackTextarea","QuarterBackInputs","CheckboxesComponent","TextComponent","RadiosComponent","SelectComponent","TextareaComponent","CustomComponent","Error","QuarterBackValues","valueIndex","updatedValues","QuarterBackRule","operatorsConfig","add","exclude","include","filteredOperators","filterOperatorsByExclude","filterOperatorsByInclude","getAllOperators","addRuleClass","addRuleEditClass","QuarterBackRuleEdit","addRuleDeletedClass","QuarterBackRuleDeleted","addRuleActionsClass","QuarterBackRuleActions","deletedText","QuarterBackRules","group","typeProps","QuarterBackTitle","QuarterBackGroup","groupRulesFragment","fragment","RulesComponent","QuarterBack","setState","prevState","state","PowerGroup","Object","assign","searchValue","typeValue","Component","color","proximity","loading","setTimeout","borderColor","style","border","App","not_in","JSON","stringify","isLocalhost","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c509f4fd.chunk.js","sourcesContent":["// @flow\nimport type { Operator } from './Operator'\n\nconst FIELD_TYPE_STRING = 'string'\nconst FIELD_TYPE_INTEGER = 'integer'\nconst FIELD_TYPE_DOUBLE = 'double'\nconst FIELD_TYPE_DATE = 'date'\nconst FIELD_TYPE_TIME = 'time'\nconst FIELD_TYPE_DATETIME = 'datetime'\nconst FIELD_TYPE_BOOLEAN = 'boolean'\n\nconst QB_RULE = 'QBRule'\nconst QB_GROUP = 'QBGroup'\n\nconst OPERATORS: Array<Operator> = [\n  {\n    id: 'equal',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME,\n        FIELD_TYPE_BOOLEAN\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_equal',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME,\n        FIELD_TYPE_BOOLEAN\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'in',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: true,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_in',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: true,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'less',\n    meta: {\n      numberOfInputs: 1,\n      multipleValuesAllowed: false,\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ]\n    }\n  },\n  {\n    id: 'less_or_equal',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'greater',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'greater_or_equal',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'between',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 2\n    }\n  },\n  {\n    id: 'not_between',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 2\n    }\n  },\n  {\n    id: 'begins_with',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_begins_with',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'contains',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_contains',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'ends_with',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_ends_with',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'is_empty',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 0\n    }\n  },\n  {\n    id: 'is_not_empty',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 0\n    }\n  },\n  {\n    id: 'is_null',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME,\n        FIELD_TYPE_BOOLEAN\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 0\n    }\n  },\n  {\n    id: 'is_not_null',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME,\n        FIELD_TYPE_BOOLEAN\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 0\n    }\n  }\n]\n\nconst FIELD_INPUT_TEXT = 'text'\nconst FIELD_INPUT_NUMBER = 'number'\nconst FIELD_INPUT_TEXTAREA = 'textarea'\nconst FIELD_INPUT_RADIO = 'radio'\nconst FIELD_INPUT_CHECKBOX = 'checkbox'\nconst FIELD_INPUT_SELECT = 'select'\n\nexport {\n  FIELD_INPUT_TEXT,\n  FIELD_INPUT_NUMBER,\n  FIELD_INPUT_TEXTAREA,\n  FIELD_INPUT_RADIO,\n  FIELD_INPUT_CHECKBOX,\n  FIELD_INPUT_SELECT,\n  FIELD_TYPE_STRING,\n  FIELD_TYPE_INTEGER,\n  FIELD_TYPE_DOUBLE,\n  FIELD_TYPE_DATE,\n  FIELD_TYPE_TIME,\n  FIELD_TYPE_DATETIME,\n  FIELD_TYPE_BOOLEAN,\n  QB_RULE,\n  QB_GROUP,\n  OPERATORS\n}\n","// @flow\nimport type { Action } from './Action'\nimport type { Type } from './Type'\nimport { QB_RULE, QB_GROUP } from './constants'\n\nfunction getActionByQB (actions: Array<Action>, QB: string): ?Action {\n  return actions.find(action => action.QB === QB)\n}\n\nfunction getActionByType (type: Type): Action {\n  if (type.action != null) {\n    return type.action\n  }\n\n  const display = type.title != null ? type.title : 'Custom'\n\n  return {\n    ...groupAction,\n    QB: type.QB,\n    display // TODO: Way to customize...\n  }\n}\n\nconst ruleAction: Action = {\n  QB: QB_RULE,\n  display: 'Rule',\n  getDefaultData: function () {\n    return {\n      QB: this.QB,\n      field: '',\n      id: '',\n      input: '',\n      operator: null,\n      type: '',\n      value: null\n    }\n  }\n}\n\nconst groupAction: Action = {\n  QB: QB_GROUP,\n  display: 'Group',\n  getDefaultData: function (fields, defaultCondition) {\n    const rules = fields != null && fields.length > 0\n      ? [ruleAction.getDefaultData()]\n      : []\n\n    return {\n      QB: this.QB,\n      condition: defaultCondition,\n      rules\n    }\n  }\n}\n\nexport {\n  getActionByQB,\n  getActionByType,\n  ruleAction,\n  groupAction\n}\n","// @flow\nimport * as React from 'react'\nimport type { Condition } from '../utils/Condition'\nimport type { GroupConditionFragment } from '../utils/Group'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\n\ntype Props = {\n  condition: Condition,\n  styleClassMap: StyleClassMap,\n  value: string,\n  handleUpdate: (fragment: GroupConditionFragment) => void\n}\n\nclass QuarterBackCondition extends React.Component<Props> {\n  handleClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n\n    const { condition } = this.props\n\n    this.props.handleUpdate({ condition: condition.value })\n  }\n\n  render () {\n    const {\n      condition,\n      styleClassMap,\n      value\n    } = this.props\n\n    const isActive = condition.value.toUpperCase() === value.toUpperCase()\n\n    const className = isActive ? 'QuarterBackConditionActive' : ''\n    const addClass = styleClassMap.QuarterBackCondition || ''\n    const addClassActive = (\n      isActive && styleClassMap.QuarterBackConditionActive != null\n    )\n      ? styleClassMap.QuarterBackConditionActive\n      : ''\n\n    return (\n      <button\n        className={`QuarterBackCondition ${className} ${addClass} ${addClassActive}`}\n        onClick={this.handleClick}\n      >\n        {condition.display}\n      </button>\n    )\n  }\n}\n\nexport default QuarterBackCondition\n","// @flow\nimport * as React from 'react'\nimport type { Condition } from '../utils/Condition'\nimport type { GroupConditionFragment } from '../utils/Group'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport QuarterBackCondition from './QuarterBackCondition'\n\ntype Props = {\n  conditions: Array<Condition>,\n  styleClassMap: StyleClassMap,\n  value: string,\n  handleUpdate: (fragment: GroupConditionFragment) => void,\n}\n\nclass QuarterBackConditions extends React.Component<Props> {\n  static defaultProps = {\n    conditions: []\n  }\n\n  render () {\n    const {\n      conditions,\n      styleClassMap,\n      value,\n      handleUpdate\n    } = this.props\n\n    if (conditions.length < 1) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackConditions != null\n      ? styleClassMap.QuarterBackConditions\n      : ''\n\n    return (\n      <div className={`QuarterBackConditions ${addClass}`}>\n        {conditions.map((condition, index) => {\n          return (\n            <QuarterBackCondition\n              key={index}\n              condition={condition}\n              styleClassMap={styleClassMap}\n              value={value}\n              handleUpdate={handleUpdate}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackConditions\n","import type { Type } from './Type'\n\nfunction getTypeByQB (types: Array<Type>, QB: string): ?Type {\n  return types.find(type => type.QB === QB)\n}\n\nexport {\n  getTypeByQB\n}\n","// @flow\nimport * as React from 'react'\nimport type { Action } from '../utils/Action'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { EmptyProps } from '../utils/Props'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport { QB_RULE, QB_GROUP } from '../utils/constants'\nimport { getTypeByQB } from '../utils/types'\n\ntype Props = {\n  action: Action,\n  actionIconMap: ActionIconMap,\n  defaultCondition: string,\n  fields: Array<Field>,\n  filterTypes: Array<string>,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  types: Array<Type>,\n  handleCreate: (data: Data) => void\n}\n\nclass QuarterBackActionCreate extends React.Component<Props> {\n  getRuleActionIcon (): React.ComponentType<EmptyProps> {\n    const {\n      actionIconMap\n    } = this.props\n\n    if (actionIconMap.QuarterBackActionRule != null) {\n      return actionIconMap.QuarterBackActionRule\n    }\n\n    if (actionIconMap.QuarterBackActionCreate != null) {\n      return actionIconMap.QuarterBackActionCreate\n    }\n\n    if (actionIconMap.QuarterBackAction != null) {\n      return actionIconMap.QuarterBackAction\n    }\n\n    return () => null\n  }\n\n  getGroupActionIcon (): React.ComponentType<EmptyProps> {\n    const {\n      actionIconMap\n    } = this.props\n\n    if (actionIconMap.QuarterBackActionGroup != null) {\n      return actionIconMap.QuarterBackActionGroup\n    }\n\n    if (actionIconMap.QuarterBackActionCreate != null) {\n      return actionIconMap.QuarterBackActionCreate\n    }\n\n    if (actionIconMap.QuarterBackAction != null) {\n      return actionIconMap.QuarterBackAction\n    }\n\n    return () => null\n  }\n\n  getOtherActionIcon (type: Type): React.ComponentType<EmptyProps> {\n    const {\n      actionIconMap\n    } = this.props\n\n    if (type.actionIcon != null) {\n      return type.actionIcon\n    }\n\n    if (actionIconMap.QuarterBackActionCreate != null) {\n      return actionIconMap.QuarterBackActionCreate\n    }\n\n    if (actionIconMap.QuarterBackAction != null) {\n      return actionIconMap.QuarterBackAction\n    }\n\n    return () => null\n  }\n\n  getActionIcon (): React.ComponentType<EmptyProps> {\n    const {\n      action,\n      types\n    } = this.props\n\n    switch (action.QB) {\n      case QB_RULE:\n        return this.getRuleActionIcon()\n      case QB_GROUP:\n        return this.getGroupActionIcon()\n      default:\n        const type = getTypeByQB(types, action.QB)\n        return this.getOtherActionIcon(type)\n    }\n  }\n\n  getActionData (): Data {\n    const {\n      action,\n      defaultCondition,\n      fields,\n      types\n    } = this.props\n\n    switch (action.QB) {\n      case QB_RULE:\n        return action.getDefaultData()\n      case QB_GROUP:\n        return action.getDefaultData(fields, defaultCondition)\n      default:\n        const type = getTypeByQB(types, action.QB)\n        return action.getDefaultData(\n          type.fields,\n          type.defaultCondition || defaultCondition\n        )\n    }\n  }\n\n  getActionAddClass (): string {\n    const {\n      action,\n      styleClassMap,\n      types\n    } = this.props\n\n    switch (action.QB) {\n      case QB_RULE:\n        return styleClassMap.QuarterBackActionRule != null\n          ? styleClassMap.QuarterBackActionRule\n          : ''\n      case QB_GROUP:\n        return styleClassMap.QuarterBackActionGroup != null\n          ? styleClassMap.QuarterBackActionGroup\n          : ''\n      default:\n        const type = getTypeByQB(types, action.QB)\n        return type.actionAddClass != null\n          ? type.actionAddClass\n          : ''\n    }\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n\n    const {\n      handleCreate\n    } = this.props\n\n    handleCreate(this.getActionData())\n  }\n\n  render () {\n    const {\n      action,\n      filterTypes,\n      softFilterTypes,\n      styleClassMap\n    } = this.props\n\n    if (filterTypes.includes(action.QB)) {\n      return null\n    }\n\n    const addClassAction = styleClassMap.QuarterBackAction != null\n      ? styleClassMap.QuarterBackAction\n      : ''\n\n    const addClassCreate = styleClassMap.QuarterBackActionCreate != null\n      ? styleClassMap.QuarterBackActionCreate\n      : ''\n\n    const addClass = this.getActionAddClass()\n\n    const ActionIcon = this.getActionIcon()\n\n    return (\n      <button\n        className={`QuarterBackActionCreate ${addClassAction} ${addClassCreate} ${addClass}`}\n        disabled={softFilterTypes.includes(action.QB)}\n        onClick={this.handleClick}\n      >\n        <ActionIcon /> {action.display}\n      </button>\n    )\n  }\n}\n\nexport default QuarterBackActionCreate\n","// @flow\nimport * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { EmptyProps } from '../utils/Props'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  index: number,\n  styleClassMap: StyleClassMap,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackActionDelete extends React.Component<Props> {\n  getActionIcon (): React.ComponentType<EmptyProps> {\n    const {\n      actionIconMap\n    } = this.props\n\n    if (actionIconMap.QuarterBackActionDelete != null) {\n      return actionIconMap.QuarterBackActionDelete\n    }\n\n    if (actionIconMap.QuarterBackAction != null) {\n      return actionIconMap.QuarterBackAction\n    }\n\n    return () => null\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n\n    const {\n      index,\n      handleDelete\n    } = this.props\n\n    handleDelete(index)\n  }\n\n  render () {\n    const {\n      index,\n      styleClassMap\n    } = this.props\n\n    // We do not want to delete the \"root\" element, which will have an\n    // index set to -1\n    if (index < 0) {\n      return null\n    }\n\n    const addClassAction = styleClassMap.QuarterBackAction != null\n      ? styleClassMap.QuarterBackAction\n      : ''\n    const addClass = styleClassMap.QuarterBackActionDelete != null\n      ? styleClassMap.QuarterBackActionDelete\n      : ''\n\n    const ActionIcon = this.getActionIcon()\n\n    return (\n      <button\n        className={`QuarterBackActionDelete ${addClassAction} ${addClass}`}\n        onClick={this.handleClick}\n      >\n        <ActionIcon /> Delete\n      </button>\n    )\n  }\n}\n\nexport default QuarterBackActionDelete\n","// @flow\nimport * as React from 'react'\nimport type { Action } from '../utils/Action'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport { ruleAction, groupAction, getActionByType } from '../utils/actions'\nimport QuarterBackActionCreate from './QuarterBackActionCreate'\nimport QuarterBackActionDelete from './QuarterBackActionDelete'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  defaultCondition: string,\n  fields: Array<Field>,\n  filterTypes: Array<string>,\n  index: number,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  types: Array<Type>,\n  handleCreate: (data: Data) => void,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackActions extends React.Component<Props> {\n  static defaultProps = {\n    fields: [],\n    types: []\n  }\n\n  getActions (): Array<Action> {\n    const {\n      fields,\n      types\n    } = this.props\n\n    if (fields.length > 0) {\n      return [ruleAction, groupAction]\n    }\n\n    const actions = types.map(getActionByType)\n\n    if (actions.length < 1) {\n      return []\n    }\n\n    return [...actions, groupAction]\n  }\n\n  render () {\n    const {\n      actionIconMap,\n      defaultCondition,\n      fields,\n      filterTypes,\n      index,\n      softFilterTypes,\n      styleClassMap,\n      types,\n      handleCreate,\n      handleDelete\n    } = this.props\n\n    const addClass = styleClassMap.QuarterBackActions != null\n      ? styleClassMap.QuarterBackActions\n      : ''\n\n    return (\n      <div className={`QuarterBackActions ${addClass}`}>\n        {this.getActions().map((action, index) => {\n          return (\n            <QuarterBackActionCreate\n              key={index}\n              action={action}\n              actionIconMap={actionIconMap}\n              defaultCondition={defaultCondition}\n              fields={fields}\n              filterTypes={filterTypes}\n              softFilterTypes={softFilterTypes}\n              styleClassMap={styleClassMap}\n              types={types}\n              handleCreate={handleCreate}\n            />\n          )\n        })}\n        <QuarterBackActionDelete\n          actionIconMap={actionIconMap}\n          index={index}\n          styleClassMap={styleClassMap}\n          handleDelete={handleDelete}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackActions\n","// @flow\nimport * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Condition } from '../utils/Condition'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { GroupConditionFragment } from '../utils/Group'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport QuarterBackConditions from './QuarterBackConditions'\nimport QuarterBackActions from './QuarterBackActions'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  condition: string,\n  conditions: Array<Condition>,\n  defaultCondition: string,\n  fields: Array<Field>,\n  filterTypes: Array<string>,\n  index: number,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  types: Array<Type>,\n  handleCreate: (data: Data) => void,\n  handleUpdate: (fragment: GroupConditionFragment) => void,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackHeader extends React.Component<Props> {\n  render () {\n    const {\n      actionIconMap,\n      condition,\n      conditions,\n      defaultCondition,\n      fields,\n      filterTypes,\n      index,\n      softFilterTypes,\n      styleClassMap,\n      types,\n      handleCreate,\n      handleUpdate,\n      handleDelete\n    } = this.props\n\n    const addClass = styleClassMap.QuarterBackHeader != null\n      ? styleClassMap.QuarterBackHeader\n      : ''\n\n    return (\n      <div className={`QuarterBackHeader ${addClass}`}>\n        <QuarterBackConditions\n          conditions={conditions}\n          styleClassMap={styleClassMap}\n          value={condition}\n          handleUpdate={handleUpdate}\n        />\n        <QuarterBackActions\n          actionIconMap={actionIconMap}\n          defaultCondition={defaultCondition}\n          fields={fields}\n          filterTypes={filterTypes}\n          index={index}\n          softFilterTypes={softFilterTypes}\n          styleClassMap={styleClassMap}\n          types={types}\n          handleCreate={handleCreate}\n          handleDelete={handleDelete}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackHeader\n","function insertAt (items: Array<mixed>, index: number, item: mixed): Array<mixed> {\n  return [\n    ...items.slice(0, index),\n    item,\n    ...items.slice(index + 1)\n  ]\n}\n\nfunction removeAt (items: Array<mixed>, index: number): Array<mixed> {\n  return items.filter((...args) => args[1] !== index)\n}\n\nexport {\n  insertAt,\n  removeAt\n}\n","// @flow\nimport * as React from 'react'\nimport type { Field } from './Field'\n\nfunction getFieldById (fields: Array<Field>, id: string): ?Field {\n  let f\n  for (f of fields) {\n    if (f.fields) {\n      let match = getFieldById(f.fields, id)\n\n      if (match) {\n        return match\n      }\n    } else if (f.id === id) {\n      return f\n    }\n  }\n}\n\nfunction getFieldComponent (field: Field, DefaultComponent: React.Component): React.Component {\n  return field.QBComponent != null ? field.QBComponent : DefaultComponent\n}\n\nexport {\n  getFieldById,\n  getFieldComponent\n}\n","// @flow\nimport type { Field } from './Field'\nimport type { Operator } from './Operator'\nimport type { OperatorsConfig } from './OperatorsConfig'\nimport { OPERATORS } from './constants'\n\nfunction filterOperatorsByExclude (\n  operators: Array<Operator>,\n  exclude?: Array<string>\n): Array<Operator> {\n  if (!exclude || exclude.length < 1) {\n    return operators\n  }\n\n  return operators.filter(({ id }) => !exclude.includes(id))\n}\n\nfunction filterOperatorsByInclude (\n  operators: Array<Operator>,\n  include?: Array<string>\n): Array<Operator> {\n  if (!include) {\n    return operators\n  }\n\n  if (include.length < 1) {\n    return []\n  }\n\n  return operators.filter(({ id }) => include.includes(id))\n}\n\nfunction getAllOperators (operatorsConfig: OperatorsConfig): Array<Operator> {\n  const {\n    add = [],\n    exclude,\n    include\n  } = operatorsConfig\n\n  const filteredOperators =\n    filterOperatorsByExclude(\n      filterOperatorsByInclude(OPERATORS, include),\n      exclude\n    )\n\n  return [...filteredOperators, ...add]\n}\n\n/**\n * Takes a field and return applicable operators based on the type\n * of the field\n */\nfunction getAllOperatorsByField (\n  field: Field,\n  operators: Array<Operator>\n): Array<Operator> {\n  return operators.filter(({ meta: { fieldTypes } }) => {\n    return fieldTypes.includes(field.type)\n  })\n}\n\n/**\n * Takes a field and returns all available operators applicable to the\n * field, or a user specified subset\n */\nfunction getDefaultOperatorsByField (\n  field: Field,\n  operators: Array<Operator>\n): Array<Operator> {\n  if (field.operators != null) {\n    return field.operators\n      .map(id => getOperatorById(id, operators))\n      .filter(Boolean)\n  }\n  return getAllOperatorsByField(field, operators)\n}\n\n/**\n * Takes a field and returns the user specified default operator or\n * first operator of list of all applicable operators\n */\nfunction getDefaultOperatorByField (\n  field: ?Field,\n  operators: Array<Operator>\n): ?Operator {\n  if (!field) {\n    return null\n  }\n\n  if (field.defaultOperator) {\n    return getOperatorById(field.defaultOperator, operators)\n  }\n\n  return getDefaultOperatorsByField(field, operators)[0]\n}\n\n/**\n * Takes an operator id and finds and operator\n */\nfunction getOperatorById (\n  id: string,\n  operators: Array<Operator>\n): ?Operator {\n  return operators.find(operator => operator.id === id)\n}\n\nexport {\n  getAllOperators,\n  getAllOperatorsByField,\n  getDefaultOperatorsByField,\n  getDefaultOperatorByField,\n  getOperatorById\n}\n","// @flow\nimport type { Field } from './Field'\nimport type { Operator } from './Operator'\nimport type { Rule } from './Rule'\nimport type {\n  EmptyValue,\n  SingleValue,\n  MultiValue,\n  NestedMultiValue,\n  Value\n} from './Value'\nimport { FIELD_INPUT_CHECKBOX, FIELD_INPUT_SELECT } from './constants'\nimport { getOperatorById } from './operators'\n\nfunction getDefaultValueByField (\n  field: Field\n): EmptyValue | SingleValue | MultiValue {\n  // allow user to provide value (it could be invalid, however)\n  if (field.defaultValue !== undefined) {\n    return field.defaultValue\n  }\n\n  const fieldValuesIsArray = Array.isArray(field.values)\n  const fieldValuesLength = fieldValuesIsArray ? field.values.length : -1\n\n  // for checkboxes with values array length > 1, we want to return an array\n  // since multiple values are allowed\n  if (field.input === FIELD_INPUT_CHECKBOX && fieldValuesLength > 1) {\n    return []\n  }\n\n  if (field.input === FIELD_INPUT_SELECT) {\n    // Similar to checkboxes; allow for multiple values\n    if (field.multiple === true) {\n      return []\n    }\n    // Default to the first defined value option in select values\n    if (fieldValuesLength > 0) {\n      return field.values[0]\n    }\n  }\n\n  return null\n}\n\nfunction getDefaultValue (field: ?Field, operator: ?Operator): Value {\n  if (!field || !operator) {\n    return null\n  }\n\n  const defaultValue = getDefaultValueByField(field)\n\n  if (operator.meta.numberOfInputs < 2) {\n    return defaultValue\n  }\n\n  return Array.from(\n    { length: operator.meta.numberOfInputs },\n    () => defaultValue\n  )\n}\n\nfunction getValue (field: ?Field, operator: ?Operator, operators, rule: Rule): Value {\n  if (!field || !operator) {\n    return null\n  }\n\n  const prevOperator = getOperatorById(rule.operator, operators)\n\n  if (\n    prevOperator &&\n    prevOperator.meta.numberOfInputs !== operator.meta.numberOfInputs\n  ) {\n    return getDefaultValue(field, operator)\n  }\n\n  return rule.value\n}\n\n/**\n * Helper func that abstracts away the difference between initial value(s)\n * for single and multi-input (e.g., 'between' operator will result in\n * two inputs). For example, a single value for a text field will still\n * return an array of length=1 (e.g., `[ '' ]`), while a 'between' operator\n * field for a 'number' would return an array with length=2 (e.g.,\n * `[ '1', '2' ]`)\n */\nfunction getInputValues (\n  field: ?Field,\n  operator: ?Operator,\n  rule: Rule\n): EmptyValue | MultiValue | NestedMultiValue {\n  if (!field || !operator || operator.meta.numberOfInputs < 1) {\n    return null\n  }\n\n  if (operator.meta.numberOfInputs < 2) {\n    return [rule.value]\n  }\n\n  return rule.value\n}\n\nfunction prepSelectValues (values, opts = {}) {\n  return values\n    .map(({deleted, fields, id, label}) => {\n      if (deleted) {\n        return null\n      }\n\n      const display = opts.labelFilter\n        ? opts.labelFilter(label, fields, id)\n        : label\n\n      if (fields) {\n        return {\n          fields: prepSelectValues(fields),\n          label: display\n        }\n      }\n\n      return {\n        label: display,\n        value: id\n      }\n    })\n    .filter(v => v !== null)\n}\n\nexport {\n  getDefaultValue,\n  getValue,\n  getInputValues,\n  prepSelectValues\n}\n","// @flow\nimport * as React from 'react'\nimport Opt from './Opt'\n\ntype Props = {\n  fields: Array,\n  label: string,\n}\n\nclass Optgroup extends React.Component<Props> {\n  render () {\n    const {\n      fields,\n      label\n    } = this.props\n\n    return (\n      <optgroup label={label}>\n        {fields.map((field, index) =>\n          <Opt key={label + index} {...field} />\n        )}\n      </optgroup>\n    )\n  }\n}\n\nexport default Optgroup\n","// @flow\nimport * as React from 'react'\n\ntype Props = {\n  label: string,\n  value: string\n}\n\nclass Option extends React.Component<Props> {\n  render () {\n    const {\n      label,\n      value\n    } = this.props\n\n    return <option value={value}>{label}</option>\n  }\n}\n\nexport default Option\n","// @flow\nimport * as React from 'react'\nimport Optgroup from './Optgroup'\nimport Option from './Option'\n\ntype Props = {\n  fields?: Array,\n  label: string,\n  value?: string\n}\n\n/**\n * Switch between optgroup and option based on certain\n * prop presence\n */\nclass Opt extends React.Component<Props> {\n  render () {\n    const {\n      fields,\n      label,\n      value\n    } = this.props\n\n    if (fields) {\n      return <Optgroup fields={fields} label={label} />\n    }\n\n    return <Option label={label} value={value} />\n  }\n}\n\nexport default Opt\n","function getInputPlaceholder (\n  placeholder?: string | Array<string>,\n  placeholderMap?: { [key: string]: string | Array<string> },\n  operator?: string,\n  index: number\n): string {\n  const actualPlaceholder = (placeholderMap && operator)\n    ? (placeholderMap[operator] || placeholder)\n    : placeholder\n\n  if (!actualPlaceholder) {\n    return ''\n  }\n\n  if (typeof actualPlaceholder === 'string') {\n    return actualPlaceholder\n  }\n\n  return actualPlaceholder[index] || ''\n}\n\nfunction getInputType (type: string): string {\n  switch (type) {\n    case 'integer':\n    case 'double':\n      return 'number'\n    case 'date':\n    case 'time':\n      return type\n    case 'datetime':\n      return 'datetime-local'\n    default:\n      return 'text'\n  }\n}\n\nfunction getInputValue (value) {\n  if (value === null) {\n    return ''\n  }\n  return value\n}\n\nfunction isInteger (str) {\n  const n = Math.floor(Number(str))\n  return isFinite(n) && String(n) === str\n}\n\nfunction parseInputValue (value, type) {\n  switch (type) {\n    case 'boolean':\n      return Boolean(value)\n    case 'integer':\n      return isInteger(value) ? parseInt(value, 10) : value\n    default:\n      return value\n  }\n}\n\nexport {\n  getInputPlaceholder,\n  getInputType,\n  getInputValue,\n  parseInputValue\n}\n","// @flow\nimport * as React from 'react'\nimport type { FieldValue } from '../../utils/Field'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue } from '../../utils/Value'\nimport Opt from './Opt'\nimport { getInputValue, parseInputValue } from '../../utils/inputs'\n\ntype Props = {\n  index: number,\n  multiple: boolean,\n  styleClassMap: StyleClassMap,\n  values?: Array<FieldValue>,\n  value: null | string,\n  handleUpdate: (value: SingleValue, index: number) => void\n}\n\nclass Select extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    multiple: false,\n    styleClassMap: {}\n  }\n\n  getValue (event) {\n    const {\n      multiple,\n      type\n    } = this.props\n\n    const { target: { options, value } } = event\n\n    if (!multiple) {\n      return parseInputValue(value, type)\n    }\n\n    return [...options]\n      .filter(option => option.selected)\n      .map(option => parseInputValue(option.value, type))\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLSelectElement>) => {\n    const {\n      index,\n      handleUpdate\n    } = this.props\n\n    handleUpdate(this.getValue(event), index)\n  }\n\n  render () {\n    const {\n      multiple,\n      styleClassMap,\n      value,\n      values\n    } = this.props\n\n    if (!values) {\n      return null\n    }\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackSelect != null\n      ? styleClassMap.QuarterBackSelect\n      : ''\n\n    return (\n      <select\n        className={`QuarterBackSelect ${addInputClass} ${addClass}`}\n        multiple={multiple}\n        value={getInputValue(value)}\n        onChange={this.handleChange}\n      >\n        {values.map((option, index) => {\n          return <Opt key={option.label + index} {...option} />\n        })}\n      </select>\n    )\n  }\n}\n\nexport default Select\n","// @flow\nimport * as React from 'react'\nimport type { Field } from '../utils/Field'\nimport type { Operator } from '../utils/Operator'\nimport type { Rule } from '../utils/Rule'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { SingleValue } from '../utils/Value'\nimport { getFieldById } from '../utils/fields'\nimport { getDefaultOperatorByField } from '../utils/operators'\nimport { getDefaultValue, prepSelectValues } from '../utils/values'\nimport Select from './inputs/Select'\n\ntype Props = {\n  fields: Array<Field>,\n  index: number,\n  operators: Array<Operator>,\n  rule: Rule,\n  selectPlaceholder: string,\n  styleClassMap: StyleClassMap,\n  handleUpdate: (data: Rule, index: number) => void\n}\n\nclass QuarterBackFields extends React.Component<Props> {\n  handleUpdate = (fieldId: SingleValue) => {\n    const {\n      fields,\n      index,\n      operators,\n      rule,\n      handleUpdate\n    } = this.props\n\n    const field = getFieldById(fields, fieldId)\n    const operator = getDefaultOperatorByField(field, operators)\n    const value = getDefaultValue(field, operator)\n\n    const data = {\n      ...rule,\n      field: field ? field.id : '',\n      id: field ? field.id : '',\n      input: field ? field.input : '',\n      operator: operator ? operator.id : null,\n      type: field ? field.type : '',\n      value\n    }\n\n    handleUpdate(data, index)\n  }\n\n  render () {\n    const {\n      fields,\n      rule,\n      selectPlaceholder,\n      styleClassMap\n    } = this.props\n\n    const defaultValue = { label: selectPlaceholder, id: '' }\n    const values = [ defaultValue, ...fields ]\n\n    const addClass = styleClassMap.QuarterBackFields || ''\n\n    return (\n      <div className={`QuarterBackFields ${addClass}`}>\n        <Select\n          styleClassMap={styleClassMap}\n          value={rule.id}\n          values={prepSelectValues(values)}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackFields\n","// @flow\nimport * as React from 'react'\nimport type { Field } from '../utils/Field'\nimport type { Operator } from '../utils/Operator'\nimport type { Rule } from '../utils/Rule'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport { getOperatorById, getDefaultOperatorsByField } from '../utils/operators'\nimport { getValue } from '../utils/values'\nimport Select from './inputs/Select'\n\ntype Props = {\n  field: Field,\n  index: number,\n  lang: Object,\n  operators: Array<Operator>,\n  rule: Rule,\n  styleClassMap: StyleClassMap,\n  handleUpdate: (data: Rule, index: number) => void\n}\n\nclass QuarterBackOperators extends React.Component<Props> {\n  handleUpdate = (operatorId: string) => {\n    const {\n      field,\n      index,\n      operators,\n      rule\n    } = this.props\n\n    const operator = getOperatorById(operatorId, operators)\n\n    const data = {\n      ...rule,\n      operator: operatorId,\n      value: getValue(field, operator, operators, rule)\n    }\n\n    this.props.handleUpdate(data, index)\n  }\n\n  render () {\n    const {\n      field,\n      lang,\n      operators,\n      rule,\n      styleClassMap\n    } = this.props\n\n    if (rule.operator === null) {\n      return null\n    }\n\n    const fieldOperators = getDefaultOperatorsByField(field, operators)\n\n    if (fieldOperators.length < 1) {\n      return null\n    }\n\n    const operatorDisplayOverrides = lang.operators || {}\n\n    const addOperatorsClass = styleClassMap.QuarterBackOperators || ''\n    const addOperatorClass = styleClassMap.QuarterBackOperator || ''\n\n    if (fieldOperators.length === 1) {\n      return (\n        <div className={`QuarterBackOperators ${addOperatorsClass}`}>\n          <span className={`QuarterBackOperator ${addOperatorClass}`}>\n            {operatorDisplayOverrides[rule.operator] ||\n             rule.operator.replace(/_/g, ' ')}\n          </span>\n        </div>\n      )\n    }\n\n    return (\n      <div className={`QuarterBackOperators ${addOperatorsClass}`}>\n        <Select\n          styleClassMap={styleClassMap}\n          value={rule.operator}\n          values={fieldOperators.map(operator => {\n            return {\n              label: (\n                operatorDisplayOverrides[operator.id] ||\n                operator.id.replace(/_/g, ' ')\n              ),\n              value: operator.id\n            }\n          })}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackOperators\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue, MultiValue } from '../../utils/Value'\n\ntype Props = {\n  checked: boolean | number | string | Array<string>,\n  index: number,\n  label: string,\n  softFilterValues: Array<string>,\n  styleClassMap: StyleClassMap,\n  value: boolean | number | string,\n  handleUpdate: (value: SingleValue | MultiValue, index: number) => void\n}\n\nclass Checkbox extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  getSingleValue (checked: boolean): boolean | number | string {\n    // TODO: bool/int? default\n    return checked ? this.props.value : ''\n  }\n\n  getMultiValue (checked: boolean): Array<string> {\n    const valuePresent = this.props.checked.includes(this.props.value)\n\n    if (checked) {\n      return valuePresent\n        ? this.props.checked\n        : [...this.props.checked, this.props.value]\n    }\n\n    return valuePresent\n      ? this.props.checked.filter(value => value !== this.props.value)\n      : this.props.checked\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const { checked, index } = this.props\n\n    const value = Array.isArray(checked)\n      ? this.getMultiValue(event.target.checked)\n      : this.getSingleValue(event.target.checked)\n\n    this.props.handleUpdate(value, index)\n  }\n\n  render () {\n    const {\n      checked,\n      label,\n      softFilterValues,\n      styleClassMap,\n      value\n    } = this.props\n\n    const isChecked = Array.isArray(checked)\n      ? checked.includes(value)\n      : value === checked\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackCheckbox != null\n      ? styleClassMap.QuarterBackCheckbox\n      : ''\n\n    return (\n      <label>\n        <input\n          checked={isChecked}\n          className={`QuarterBackCheckbox ${addInputClass} ${addClass}`}\n          disabled={softFilterValues.includes(value)}\n          type='checkbox'\n          onChange={this.handleChange}\n        />{' '}\n        <span>{label}</span>\n      </label>\n    )\n  }\n}\n\nexport default Checkbox\n","// @flow\nimport * as React from 'react'\nimport type { FieldValue } from '../../utils/Field'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { NonEmptyValue } from '../../utils/Value'\nimport Checkbox from './Checkbox'\n\ntype Props = {\n  index: number,\n  softFilterValues: Array<string>,\n  styleClassMap: StyleClassMap,\n  values?: Array<FieldValue>,\n  value: NonEmptyValue,\n  handleUpdate: (value: NonEmptyValue, index: number) => void\n}\n\nclass Checkboxes extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  render () {\n    const {\n      index,\n      softFilterValues = [],\n      styleClassMap,\n      value,\n      values,\n      handleUpdate\n    } = this.props\n\n    if (!values) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackCheckboxes != null\n      ? styleClassMap.QuarterBackCheckboxes\n      : ''\n\n    return (\n      <div className={`QuarterBackCheckboxes ${addClass}`}>\n        {values.map((checkbox, checkboxIndex) => {\n          return (\n            <Checkbox\n              key={checkboxIndex}\n              checked={value}\n              index={index}\n              softFilterValues={softFilterValues}\n              styleClassMap={styleClassMap}\n              {...checkbox}\n              handleUpdate={handleUpdate}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Checkboxes\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue } from '../../utils/Value'\n\ntype Props = {\n  checked: string | Array<string>,\n  index: number,\n  label: string,\n  styleClassMap: StyleClassMap,\n  value: string,\n  handleUpdate: (value: SingleValue, index: number) => void\n}\n\nclass Radio extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const {\n      index,\n      value,\n      handleUpdate\n    } = this.props\n\n    const { target: { checked } } = event\n\n    if (!checked) {\n      return\n    }\n\n    handleUpdate(value, index)\n  }\n\n  render () {\n    const {\n      checked,\n      label,\n      styleClassMap,\n      value\n    } = this.props\n\n    const isChecked = checked === value\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackRadio != null\n      ? styleClassMap.QuarterBackRadio\n      : ''\n\n    return (\n      <label>\n        <input\n          checked={isChecked}\n          className={`QuarterBackRadio ${addInputClass} ${addClass}`}\n          type='radio'\n          onChange={this.handleChange}\n        />{' '}\n        {label}\n      </label>\n    )\n  }\n}\n\nexport default Radio\n","// @flow\nimport * as React from 'react'\nimport type { FieldValue } from '../../utils/Field'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { NonEmptyValue } from '../../utils/Value'\nimport Radio from './Radio'\n\ntype Props = {\n  index: number,\n  styleClassMap: StyleClassMap,\n  values?: Array<FieldValue>,\n  value: NonEmptyValue,\n  handleUpdate: (value: NonEmptyValue, index: number) => void\n}\n\nclass Radios extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  render () {\n    const {\n      index,\n      styleClassMap,\n      value,\n      values,\n      handleUpdate\n    } = this.props\n\n    if (!values) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackRadios != null\n      ? styleClassMap.QuarterBackRadios\n      : ''\n\n    return (\n      <div className={`QuarterBackRadios ${addClass}`}>\n        {values.map((radio, radioIndex) => {\n          return (\n            <Radio\n              key={radioIndex}\n              checked={value}\n              index={index}\n              styleClassMap={styleClassMap}\n              {...radio}\n              handleUpdate={handleUpdate}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Radios\n","// @flow\nimport * as React from 'react'\n\ntype Props = {\n  inputsSeparator: string,\n  index: number,\n  numValues: number\n}\n\nclass Separator extends React.Component<Props> {\n  render () {\n    const {\n      inputsSeparator,\n      index,\n      numValues,\n      styleClassMap\n    } = this.props\n\n    if (!inputsSeparator || (index + 1) >= numValues) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackInputSeparator || ''\n\n    return (\n      <span className={`QuarterBackInputSeparator ${addClass}`}>\n        {inputsSeparator}\n      </span>\n    )\n  }\n}\n\nexport default Separator\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue } from '../../utils/Value'\nimport {\n  getInputPlaceholder,\n  getInputType,\n  getInputValue,\n  parseInputValue\n} from '../../utils/inputs'\n\ntype Props = {\n  index: number,\n  operator?: string,\n  placeholder?: string,\n  placeholderMap?: { [key: string]: string | Array<string> },\n  styleClassMap: StyleClassMap,\n  type: string,\n  value: string,\n  handleUpdate: (value: SingleValue, index: number) => void\n}\n\nclass Text extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {},\n    type: 'string'\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const {\n      index,\n      handleUpdate,\n      type\n    } = this.props\n\n    const { target: { value } } = event\n\n    handleUpdate(parseInputValue(value, type), index)\n  }\n\n  render () {\n    const {\n      index,\n      operator,\n      placeholder,\n      placeholderMap,\n      styleClassMap,\n      type,\n      value\n    } = this.props\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackText != null\n      ? styleClassMap.QuarterBackText\n      : ''\n\n    return (\n      <input\n        className={`QuarterBackText ${addInputClass} ${addClass}`}\n        placeholder={getInputPlaceholder(\n          placeholder,\n          placeholderMap,\n          operator,\n          index\n        )}\n        type={getInputType(type)}\n        value={getInputValue(value)}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nexport default Text\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue } from '../../utils/Value'\nimport { getInputPlaceholder, getInputValue } from '../../utils/inputs'\n\ntype Props = {\n  index: number,\n  operator?: string,\n  placeholder?: string,\n  placeholderMap?: { [key: string]: string | Array<string> },\n  styleClassMap: StyleClassMap,\n  value: string,\n  handleUpdate: (value: SingleValue, index: number) => void\n}\n\nclass Textarea extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const {\n      index,\n      handleUpdate\n    } = this.props\n\n    const { target: { value } } = event\n\n    handleUpdate(value, index)\n  }\n\n  render () {\n    const {\n      index,\n      operator,\n      placeholder,\n      placeholderMap,\n      styleClassMap,\n      value\n    } = this.props\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackTextarea != null\n      ? styleClassMap.QuarterBackTextarea\n      : ''\n\n    return (\n      <textarea\n        className={`QuarterBackText ${addInputClass} ${addClass}`}\n        placeholder={getInputPlaceholder(\n          placeholder,\n          placeholderMap,\n          operator,\n          index\n        )}\n        value={getInputValue(value)}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nexport default Textarea\n","// @flow\nimport * as React from 'react'\nimport type { Field } from '../utils/Field'\nimport type { Rule } from '../utils/Rule'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { MultiValue, NestedMultiValue } from '../utils/Value'\nimport {\n  FIELD_INPUT_TEXT,\n  FIELD_INPUT_NUMBER,\n  FIELD_INPUT_TEXTAREA,\n  FIELD_INPUT_RADIO,\n  FIELD_INPUT_CHECKBOX,\n  FIELD_INPUT_SELECT\n} from '../utils/constants'\nimport { getFieldComponent } from '../utils/fields'\nimport Checkboxes from './inputs/Checkboxes'\nimport Radios from './inputs/Radios'\nimport Select from './inputs/Select'\nimport Separator from './inputs/Separator'\nimport Text from './inputs/Text'\nimport Textarea from './inputs/Textarea'\n\ntype Props = {\n  field: Field,\n  inputsSeparator: string,\n  operator: string,\n  styleClassMap: StyleClassMap,\n  values: MultiValue | NestedMultiValue,\n  handleUpdate: (data: Rule, index: number) => void\n}\n\nclass QuarterBackInputs extends React.Component<Props> {\n  render () {\n    const {\n      field,\n      inputsSeparator,\n      operator,\n      styleClassMap,\n      values,\n      handleUpdate\n    } = this.props\n\n    const numValues = values.length\n\n    switch (field.input) {\n      case FIELD_INPUT_CHECKBOX:\n        const CheckboxesComponent = getFieldComponent(field, Checkboxes)\n\n        return values.map((value, index) => {\n          return [\n            <CheckboxesComponent\n              key={index}\n              index={index}\n              opts={field.opts}\n              styleClassMap={styleClassMap}\n              value={value}\n              values={field.values}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      case FIELD_INPUT_NUMBER:\n      case FIELD_INPUT_TEXT:\n        const TextComponent = getFieldComponent(field, Text)\n\n        return values.map((value, index) => {\n          return [\n            <TextComponent\n              key={index}\n              index={index}\n              operator={operator}\n              opts={field.opts}\n              placeholder={field.placeholder}\n              placeholderMap={field.placeholderMap}\n              styleClassMap={styleClassMap}\n              type={field.type}\n              value={value}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      case FIELD_INPUT_RADIO:\n        const RadiosComponent = getFieldComponent(field, Radios)\n\n        return values.map((value, index) => {\n          return [\n            <RadiosComponent\n              key={index}\n              index={index}\n              opts={field.opts}\n              styleClassMap={styleClassMap}\n              value={value}\n              values={field.values}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      case FIELD_INPUT_SELECT:\n        const SelectComponent = getFieldComponent(field, Select)\n\n        return values.map((value, index) => {\n          return [\n            <SelectComponent\n              key={index}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              multiple={field.multiple}\n              opts={field.opts}\n              styleClassMap={styleClassMap}\n              value={value}\n              values={field.values}\n              type={field.type}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      case FIELD_INPUT_TEXTAREA:\n        const TextareaComponent = getFieldComponent(field, Textarea)\n\n        return values.map((value, index) => {\n          return [\n            <TextareaComponent\n              key={index}\n              index={index}\n              operator={operator}\n              opts={field.opts}\n              placeholder={field.placeholder}\n              placeholderMap={field.placeholderMap}\n              styleClassMap={styleClassMap}\n              type={field.input}\n              value={value}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      default:\n        const CustomComponent = field.QBComponent\n\n        if (CustomComponent == null) {\n          throw new Error('Unable to find input')\n        }\n\n        return values.map((value, index) => {\n          return [\n            <CustomComponent\n              key={index}\n              index={index}\n              opts={field.opts}\n              value={value}\n              styleClassMap={styleClassMap}\n              type={field.input}\n              values={field.values}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n    }\n  }\n}\n\nexport default QuarterBackInputs\n","// @flow\nimport * as React from 'react'\nimport type { Field } from '../utils/Field'\nimport type { Operator } from '../utils/Operator'\nimport type { Rule } from '../utils/Rule'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { NonEmptyValue } from '../../utils/Value'\nimport { insertAt } from '../utils/arrays'\nimport { getOperatorById } from '../utils/operators'\nimport { getInputValues } from '../utils/values'\nimport QuarterBackInputs from './QuarterBackInputs'\n\ntype Props = {\n  field: Field,\n  index: number,\n  inputsSeparator: string,\n  operators: Array<Operator>,\n  rule: Rule,\n  styleClassMap: StyleClassMap,\n  handleUpdate: (data: Rule, index: number) => void\n}\n\nclass QuarterBackValues extends React.Component<Props> {\n  handleUpdate = (value: NonEmptyValue, valueIndex: number) => {\n    const {\n      field,\n      index,\n      operators,\n      rule,\n      handleUpdate\n    } = this.props\n\n    const operator = getOperatorById(rule.operator, operators)\n    const values = getInputValues(field, operator, rule)\n    const updatedValues = insertAt(values, valueIndex, value)\n\n    const data = {\n      ...rule,\n      value: updatedValues.length === 1 ? updatedValues[0] : updatedValues\n    }\n\n    handleUpdate(data, index)\n  }\n\n  render () {\n    const {\n      field,\n      inputsSeparator,\n      operators,\n      rule,\n      styleClassMap\n    } = this.props\n\n    const operator = getOperatorById(rule.operator, operators)\n    const values = getInputValues(field, operator, rule)\n\n    if (values === null) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackValues || ''\n\n    return (\n      <div className={`QuarterBackValues ${addClass}`}>\n        <QuarterBackInputs\n          field={field}\n          inputsSeparator={inputsSeparator}\n          operator={operator.id}\n          styleClassMap={styleClassMap}\n          values={values}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackValues\n","// @flow\nimport * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { Rule } from '../utils/Rule'\nimport type { OperatorsConfig } from '../utils/OperatorsConfig'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport { getFieldById } from '../utils/fields'\nimport { getAllOperators } from '../utils/operators'\nimport QuarterBackFields from './QuarterBackFields'\nimport QuarterBackOperators from './QuarterBackOperators'\nimport QuarterBackValues from './QuarterBackValues'\nimport QuarterBackActionDelete from './QuarterBackActionDelete'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  fields: Array<Field>,\n  index: number,\n  inputsSeparator: string,\n  lang: Object,\n  operatorsConfig: OperatorsConfig,\n  rule: Rule,\n  selectPlaceholder: string,\n  styleClassMap: StyleClassMap,\n  handleUpdate: (data: Data, index: number) => void,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackRule extends React.Component<Props> {\n  render () {\n    const {\n      actionIconMap,\n      fields,\n      index,\n      inputsSeparator,\n      lang,\n      operatorsConfig,\n      rule,\n      selectPlaceholder,\n      styleClassMap,\n      handleUpdate,\n      handleDelete\n    } = this.props\n\n    const field = getFieldById(fields, rule.id)\n    const operators = getAllOperators(operatorsConfig)\n\n    const addRuleClass = styleClassMap.QuarterBackRule != null\n      ? styleClassMap.QuarterBackRule\n      : ''\n\n    const addRuleEditClass = styleClassMap.QuarterBackRuleEdit != null\n      ? styleClassMap.QuarterBackRuleEdit\n      : ''\n\n    const addRuleDeletedClass = styleClassMap.QuarterBackRuleDeleted != null\n      ? styleClassMap.QuarterBackRuleDeleted\n      : ''\n\n    const addRuleActionsClass = styleClassMap.QuarterBackRuleActions != null\n      ? styleClassMap.QuarterBackRuleActions\n      : ''\n\n    return (\n      <div className={`QuarterBackRule ${addRuleClass}`}>\n        {field && field.deleted\n          ? <div className={`QuarterBackRuleEdit QuarterBackRuleDeleted ${addRuleEditClass} ${addRuleDeletedClass}`}>\n            <span>{field.deletedText || `\"${field.label}\" field was deleted`}</span>\n          </div>\n          : <div className={`QuarterBackRuleEdit ${addRuleEditClass}`}>\n            <QuarterBackFields\n              fields={fields}\n              index={index}\n              operators={operators}\n              rule={rule}\n              selectPlaceholder={selectPlaceholder}\n              styleClassMap={styleClassMap}\n              handleUpdate={handleUpdate}\n            />\n            <QuarterBackOperators\n              field={field}\n              index={index}\n              lang={lang}\n              operators={operators}\n              rule={rule}\n              styleClassMap={styleClassMap}\n              handleUpdate={handleUpdate}\n            />\n            <QuarterBackValues\n              field={field}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              operators={operators}\n              rule={rule}\n              styleClassMap={styleClassMap}\n              handleUpdate={handleUpdate}\n            />\n          </div>}\n        <div className={`QuarterBackRuleActions ${addRuleActionsClass}`}>\n          <QuarterBackActionDelete\n            actionIconMap={actionIconMap}\n            index={index}\n            styleClassMap={styleClassMap}\n            handleDelete={handleDelete}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackRule\n","// @flow\nimport * as React from 'react'\nimport type { Data } from '../utils/Data'\nimport type { GroupRulesFragment } from '../utils/Group'\nimport type { RulesProps } from '../utils/Rules'\nimport { insertAt, removeAt } from '../utils/arrays'\nimport { QB_RULE, QB_GROUP } from '../utils/constants'\nimport { getTypeByQB } from '../utils/types'\nimport QuarterBackRule from './QuarterBackRule'\nimport QuarterBackGroup from './QuarterBackGroup'\n\nclass QuarterBackRules extends React.Component<RulesProps> {\n  /**\n   * Takes a modified group or rule and index and overwrites a copy of\n   * the current rules prop at the specified index. Passes the modified\n   * rules copy to parent\n   */\n  handleUpdate = (data: Data, index: number) => {\n    const {\n      rules,\n      handleUpdate\n    } = this.props\n\n    const groupRulesFragment: GroupRulesFragment = {\n      rules: insertAt(rules, index, data)\n    }\n\n    handleUpdate(groupRulesFragment)\n  }\n\n  /**\n   * Takes an index and removes the rule or group in a copy of the current\n   * rules prop at the specified index. Passes the modified rules copy to\n   * parent\n   */\n  handleDelete = (index: number) => {\n    const {\n      rules,\n      handleUpdate\n    } = this.props\n\n    const groupRulesFragment: GroupRulesFragment = {\n      rules: removeAt(rules, index)\n    }\n\n    handleUpdate(groupRulesFragment)\n  }\n\n  render () {\n    const {\n      actionIconMap,\n      conditions,\n      fields,\n      filterTypes,\n      inputsSeparator,\n      lang,\n      operatorsConfig,\n      rules,\n      softFilterTypes,\n      selectPlaceholder,\n      styleClassMap,\n      types\n    } = this.props\n\n    if (rules.length < 1) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackRules != null\n      ? styleClassMap.QuarterBackRules\n      : ''\n\n    return (\n      <div className={`QuarterBackRules ${addClass}`}>\n        {rules.map((data, index) => {\n          const { QB, condition } = data\n\n          // \"Old\" rule data from jQuery plugin will not have \"condition\"\n          // key\n          if (QB === QB_RULE || condition === undefined) {\n            return (\n              <QuarterBackRule\n                key={index}\n                QB={QB_RULE}\n                actionIconMap={actionIconMap}\n                fields={fields}\n                index={index}\n                inputsSeparator={inputsSeparator}\n                lang={lang}\n                operatorsConfig={operatorsConfig}\n                rule={data}\n                selectPlaceholder={selectPlaceholder}\n                styleClassMap={styleClassMap}\n                handleUpdate={this.handleUpdate}\n                handleDelete={this.handleDelete}\n              />\n            )\n          }\n\n          // \"Old\" group data from jQuery plugin _will_ have a \"condition\" key\n          if (\n            (QB === QB_GROUP) ||\n            (QB === undefined && condition !== undefined)\n          ) {\n            return (\n              <QuarterBackGroup\n                key={index}\n                QB={QB_GROUP}\n                actionIconMap={actionIconMap}\n                conditions={conditions}\n                defaultCondition={this.props.defaultCondition}\n                fields={fields}\n                filterTypes={filterTypes}\n                group={data}\n                index={index}\n                inputsSeparator={inputsSeparator}\n                lang={lang}\n                operatorsConfig={operatorsConfig}\n                selectPlaceholder={selectPlaceholder}\n                softFilterTypes={softFilterTypes}\n                styleClassMap={styleClassMap}\n                types={types}\n                handleUpdate={this.handleUpdate}\n                handleDelete={this.handleDelete}\n              />\n            )\n          }\n\n          const type = getTypeByQB(types, QB)\n\n          if (!type) {\n            throw new Error('Unable to find type')\n          }\n\n          const {\n            action,\n            actionAddClass,\n            actionIcon,\n            defaultCondition = this.props.defaultCondition,\n            ...typeProps\n          } = type\n\n          return (\n            <QuarterBackGroup\n              {...typeProps}\n              key={index}\n              actionIconMap={actionIconMap}\n              defaultCondition={defaultCondition}\n              filterTypes={filterTypes}\n              group={data}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              lang={lang}\n              operatorsConfig={operatorsConfig}\n              selectPlaceholder={selectPlaceholder}\n              softFilterTypes={softFilterTypes}\n              styleClassMap={styleClassMap}\n              handleUpdate={this.handleUpdate}\n              handleDelete={this.handleDelete}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackRules\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\n\ntype Props = {\n  styleClassMap: StyleClassMap,\n  title?: string\n}\n\nclass QuarterBackTitle extends React.Component<Props> {\n  render () {\n    const {\n      styleClassMap,\n      title\n    } = this.props\n\n    if (!title) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackTitle != null\n      ? styleClassMap.QuarterBackTitle\n      : ''\n\n    return (\n      <div className={`QuarterBackTitle ${addClass}`}>{title}</div>\n    )\n  }\n}\n\nexport default QuarterBackTitle\n","// @flow\nimport * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Condition } from '../utils/Condition'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { Group, GroupFragment, GroupRulesFragment } from '../utils/Group'\nimport type { OperatorsConfig } from '../utils/OperatorsConfig'\nimport type { RulesProps } from '../utils/Rules'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport { andCondition, orCondition } from '../utils/conditions'\nimport { QB_GROUP } from '../utils/constants'\nimport QuarterBackHeader from './QuarterBackHeader'\nimport QuarterBackRules from './QuarterBackRules'\nimport QuarterBackTitle from './QuarterBackTitle'\n\ntype Props = {\n  QB: string,\n  QBComponent?: React.ComponentType<RulesProps>,\n  actionIconMap: ActionIconMap,\n  conditions: Array<Condition>,\n  defaultCondition: string,\n  fields: Array<Field>,\n  filterTypes: Array<string>,\n  group: Group,\n  index: number,\n  inputsSeparator: string,\n  lang: Object,\n  operatorsConfig: OperatorsConfig,\n  selectPlaceholder: string,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  title?: string,\n  types: Array<Type>,\n  handleUpdate: (group: Group, index: number) => void,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackGroup extends React.Component<Props> {\n  static defaultProps = {\n    QB: QB_GROUP,\n    conditions: [andCondition, orCondition],\n    fields: [],\n    index: -1,\n    types: [],\n    handleDelete: (index: number) => {}\n  }\n\n  /**\n   * Takes a new group or rule and appends it to a copy of the current\n   * group's rules prop. Passes the modified rules copy to update\n   * method\n   */\n  handleCreate = (data: Data) => {\n    const { group: { rules } } = this.props\n\n    const groupRulesFragment: GroupRulesFragment = {\n      rules: [...rules, data]\n    }\n\n    this.handleUpdate(groupRulesFragment)\n  }\n\n  /**\n   * Takes a group fragment and merges it with a copy of the current\n   * group prop. Passes the modified group copy to parent\n   */\n  handleUpdate = (fragment: GroupFragment) => {\n    const {\n      QB,\n      group,\n      index,\n      handleUpdate\n    } = this.props\n\n    const updatedGroup = {\n      QB,\n      ...group,\n      ...fragment\n    }\n\n    handleUpdate(updatedGroup, index)\n  }\n\n  render () {\n    const {\n      QB,\n      QBComponent,\n      actionIconMap,\n      conditions,\n      defaultCondition,\n      fields,\n      filterTypes,\n      group,\n      index,\n      inputsSeparator,\n      lang,\n      operatorsConfig,\n      selectPlaceholder,\n      softFilterTypes,\n      styleClassMap,\n      title,\n      types,\n      handleDelete\n    } = this.props\n\n    if (filterTypes.includes(QB)) {\n      return null\n    }\n\n    const RulesComponent = QBComponent != null\n      ? QBComponent\n      : QuarterBackRules\n\n    const addClass = styleClassMap.QuarterBackGroup != null\n      ? styleClassMap.QuarterBackGroup\n      : ''\n\n    return (\n      <div className={`QuarterBackGroup ${addClass}`}>\n        <QuarterBackTitle\n          styleClassMap={styleClassMap}\n          title={title}\n        />\n        <QuarterBackHeader\n          actionIconMap={actionIconMap}\n          condition={group.condition}\n          conditions={conditions}\n          defaultCondition={defaultCondition}\n          fields={fields}\n          filterTypes={filterTypes}\n          index={index}\n          softFilterTypes={softFilterTypes}\n          styleClassMap={styleClassMap}\n          types={types}\n          handleCreate={this.handleCreate}\n          handleUpdate={this.handleUpdate}\n          handleDelete={handleDelete}\n        />\n        <RulesComponent\n          actionIconMap={actionIconMap}\n          conditions={conditions}\n          defaultCondition={defaultCondition}\n          fields={fields}\n          filterTypes={filterTypes}\n          inputsSeparator={inputsSeparator}\n          lang={lang}\n          operatorsConfig={operatorsConfig}\n          rules={group.rules}\n          selectPlaceholder={selectPlaceholder}\n          softFilterTypes={softFilterTypes}\n          styleClassMap={styleClassMap}\n          types={types}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackGroup\n","// @flow\nimport type { Condition } from './Condition'\n\nconst andCondition: Condition = {\n  display: 'And',\n  value: 'AND'\n}\n\nconst orCondition: Condition = {\n  display: 'Or',\n  value: 'OR'\n}\n\nexport {\n  andCondition,\n  orCondition\n}\n","import * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Condition } from '../utils/Condition'\nimport type { Field } from '../utils/Field'\nimport type { Group } from '../utils/Group'\nimport type { OperatorsConfig } from '../utils/OperatorsConfig'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport { groupAction } from '../utils/actions'\nimport QuarterBackGroup from './QuarterBackGroup'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  conditions?: Array<Condition>,\n  defaultCondition: string,\n  fields?: Array<Field>,\n  filterTypes: Array<string>,\n  inputsSeparator: string,\n  lang: Object,\n  operatorsConfig: OperatorsConfig,\n  rules?: Group,\n  selectPlaceholder: string,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  types?: Array<Type>,\n  handleUpdate: (data: Group) => void\n}\n\nclass QuarterBack extends React.Component<Props> {\n  static defaultProps = {\n    actionIconMap: {},\n    defaultCondition: 'AND',\n    filterTypes: [],\n    inputsSeparator: ',',\n    lang: {},\n    operatorsConfig: {},\n    selectPlaceholder: '------',\n    softFilterTypes: [],\n    styleClassMap: {},\n    handleUpdate: (data: Group, index: number) => {}\n  }\n\n  constructor (props: Props) {\n    super(props)\n\n    const {\n      defaultCondition,\n      fields,\n      rules\n    } = props\n\n    const group = groupAction.getDefaultData(\n      fields,\n      defaultCondition\n    )\n\n    this.state = {\n      ...group,\n      ...rules\n    }\n  }\n\n  handleUpdate = (data: Group) => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        ...data\n      }\n    }, () => this.props.handleUpdate(this.state))\n  }\n\n  render () {\n    const {\n      actionIconMap,\n      conditions,\n      defaultCondition,\n      fields,\n      filterTypes,\n      inputsSeparator,\n      lang,\n      operatorsConfig,\n      selectPlaceholder,\n      softFilterTypes,\n      styleClassMap,\n      types\n    } = this.props\n\n    const addClass = styleClassMap.QuarterBack != null\n      ? styleClassMap.QuarterBack\n      : ''\n\n    return (\n      <div className={`QuarterBack ${addClass}`}>\n        <QuarterBackGroup\n          actionIconMap={actionIconMap}\n          conditions={conditions}\n          defaultCondition={defaultCondition}\n          fields={fields}\n          filterTypes={filterTypes}\n          group={this.state}\n          inputsSeparator={inputsSeparator}\n          lang={lang}\n          operatorsConfig={operatorsConfig}\n          selectPlaceholder={selectPlaceholder}\n          softFilterTypes={softFilterTypes}\n          styleClassMap={styleClassMap}\n          types={types}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBack\n","import { ruleAction, groupAction } from './utils/actions'\nimport { QB_RULE, QB_GROUP } from './utils/constants'\nimport QuarterBack from './components/QuarterBack'\nimport QuarterBackHeader from './components/QuarterBackHeader'\nimport QuarterBackTitle from './components/QuarterBackTitle'\nimport Checkbox from './components/inputs/Checkbox'\nimport Checkboxes from './components/inputs/Checkboxes'\nimport Select from './components/inputs/Select'\nimport Text from './components/inputs/Text'\n\nexport default QuarterBack\n\nexport {\n  QB_RULE,\n  QB_GROUP,\n  ruleAction,\n  groupAction,\n  QuarterBackHeader,\n  QuarterBackTitle,\n  Checkbox,\n  Checkboxes,\n  Select,\n  Text\n}\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'glyphicons-only-bootstrap/css/bootstrap.css'\nimport './App.css'\nimport './lib/components/styles/QuarterBack.css'\nimport './lib/components/styles/QuarterBackClassic.css'\nimport QuarterBack, { ruleAction, Checkboxes, Select, Text } from './lib'\n\nclass PowerGroup extends Component {\n  handleUpdate = (value, index) => {\n    const rule = { ...this.props.rules[index], value }\n    const rules = Object.assign([], [...this.props.rules], { [index]: rule })\n    this.props.handleUpdate({ rules })\n  }\n\n  render () {\n    const searchValue = this.props.rules[0].value\n    const typeValue = this.props.rules[1].value\n\n    return (\n      <div className='QuarterBackRules'>\n        <Text\n          index={0}\n          styleClassMap={{QuarterBackInput: 'form-control'}}\n          value={searchValue}\n          handleUpdate={this.handleUpdate}\n        />\n        <Checkboxes\n          index={1}\n          value={typeValue}\n          values={[\n            { label: 'Book', value: 'book' },\n            { label: 'Movie', value: 'movie' }\n          ]}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nclass AsyncSelect extends Component {\n  state = {\n    loading: true,\n    values: []\n  }\n\n  componentDidMount () {\n    setTimeout(() => {\n      // this.props.handleUpdate('penguin', this.props.index)\n\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          loading: false,\n          values: [\n            { label: 'Penguin', value: 'penguin' },\n            { label: 'Pearson', value: 'pearson' }\n          ]\n        }\n      })\n    }, 5e2)\n  }\n\n  render () {\n    const {opts} = this.props\n    const borderColor = opts && opts.borderColor\n      ? opts.borderColor\n      : 'transparent'\n\n    if (this.state.loading) {\n      return <p style={{border: `1px solid ${borderColor}`}}>Loading&hellip;</p>\n    }\n\n    const props = {\n      ...this.props,\n      values: this.state.values\n    }\n\n    return <Select {...props} />\n  }\n}\n\nconst book = {\n  QB: 'Book',\n  fields: [\n    {\n      id: 'title',\n      label: 'Title',\n      input: 'text',\n      opts: {\n        color: 'blue'\n      },\n      type: 'string',\n      placeholder: 'Title...',\n      placeholderMap: {\n        proximity: ['Title...', 'Word distance']\n      }\n    },\n    { id: 'pub_year', label: 'Year Published', input: 'number', type: 'integer' },\n    { id: 'pages', label: 'Number of Pages', input: 'number', type: 'integer' },\n    { id: 'genre',\n      label: 'Genre',\n      input: 'select',\n      multiple: true,\n      type: 'string',\n      values: [\n        { label: 'Sci-Fi', value: 'scifi' },\n        { label: 'Romance', value: 'romance' }\n      ] },\n    {\n      QBComponent: AsyncSelect,\n      id: 'publisher',\n      label: 'Publisher',\n      opts: {\n        borderColor: 'red'\n      },\n      input: 'select',\n      type: 'string',\n      defaultValue: 'penguin'\n    }\n  ],\n  title: 'Book Query'\n}\n\nconst movieAction = {\n  QB: 'Movie',\n  display: 'Add movie',\n  getDefaultData: function () {\n    return {\n      QB: this.QB,\n      condition: '',\n      rules: [ruleAction.getDefaultData()]\n    }\n  }\n}\nconst movie = {\n  QB: 'Movie',\n  action: movieAction,\n  fields: [\n    { id: 'title', label: 'Title', input: 'text', type: 'string' },\n    { id: 'rel_year', label: 'Year Released', input: 'number', type: 'integer' },\n    { id: 'duration', label: 'Running time (mins)', input: 'number', type: 'integer' },\n    { id: 'kw', label: 'Keywords', input: 'textarea', type: 'string' },\n    { id: 'genre',\n      label: 'Genre',\n      input: 'checkbox',\n      type: 'string',\n      values: [\n        { label: 'Sci-Fi', value: 'scifi' },\n        { label: 'Romance', value: 'romance' }\n      ] },\n    { id: 'rating',\n      label: 'Rating',\n      input: 'radio',\n      type: 'string',\n      values: [\n        { label: 'Good', value: 'good' },\n        { label: 'Bad', value: 'bad' },\n        { label: 'Ugly', value: 'ugly' }\n      ] },\n    {\n      label: 'Cast & Crew',\n      fields: [\n        { id: 'director', label: 'Director', input: 'text', type: 'string' },\n        { id: 'producer', label: 'Producer', input: 'text', type: 'string' }\n      ]\n    }\n  ],\n  title: 'Movie Query'\n}\n\nconst types = [book, movie, {\n  QB: 'Search',\n  QBComponent: PowerGroup,\n  action: {\n    QB: 'Search',\n    display: 'Add search',\n    getDefaultData: function () {\n      return {\n        QB: this.QB,\n        condition: '',\n        rules: [\n          {\n            QB: 'query_string',\n            field: 'qs',\n            id: 'qs',\n            input: 'search',\n            operator: 'equal',\n            type: 'string',\n            value: ''\n          },\n          {\n            QB: 'type',\n            field: 'qstype',\n            id: 'qstype',\n            input: 'checkbox',\n            operator: 'equal',\n            type: 'string',\n            value: []\n          }\n        ]\n      }\n    }\n  },\n  conditions: [],\n  title: 'Search'\n}]\n\nconst styleClassMap = {\n  QuarterBackConditions: 'btn-group',\n  QuarterBackCondition: 'btn btn-sm btn-primary',\n  QuarterBackConditionActive: 'active',\n  QuarterBackActions: 'btn-group',\n  QuarterBackAction: 'btn btn-sm',\n  QuarterBackActionCreate: 'btn-success',\n  QuarterBackActionDelete: 'btn-danger',\n  QuarterBackSelect: 'form-control',\n  QuarterBackText: 'form-control',\n  QuarterBackTextarea: 'form-control'\n}\n\nconst actionIconMap = {\n  QuarterBackActionRule: () => <i className='glyphicon glyphicon-plus' />,\n  QuarterBackActionCreate: () => <i className='glyphicon glyphicon-plus-sign' />,\n  QuarterBackActionDelete: () => <i className='glyphicon glyphicon-remove' />\n}\n\n// const data = {\n//   condition: 'or',\n//   rules: [\n//     {\n//       QB: QB_RULE,\n//       id: 'title',\n//       operator: 'equal',\n//       value: 'Where the red fern grows'\n//     },\n//     {\n//       QB: QB_GROUP,\n//       condition: 'and',\n//       rules: [\n//         { QB: QB_RULE, id: 'pub_year', operator: 'less', value: '1962' },\n//         { QB: QB_RULE, id: 'pages', operator: 'greater', value: '200' }\n//       ]\n//     }\n//   ]\n// }\n\nclass App extends Component {\n  state = {}\n\n  handleUpdate = data => {\n    this.setState(prevState => ({ ...prevState, data }))\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <QuarterBack\n          actionIconMap={actionIconMap}\n          handleUpdate={this.handleUpdate}\n          lang={{\n            operators: {\n              not_in: 'does not contain'\n            }\n          }}\n          operatorsConfig={{\n            add: [\n              {\n                id: 'proximity',\n                meta: {\n                  fieldTypes: ['string'],\n                  multipleValuesAllowed: false,\n                  numberOfInputs: 2\n                }\n              }\n            ],\n            exclude: ['ends_with']\n          }}\n          styleClassMap={styleClassMap}\n          types={types}\n        />\n        <pre>{JSON.stringify(this.state.data, null, 2)}</pre>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
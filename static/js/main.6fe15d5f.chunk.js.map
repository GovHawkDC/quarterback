{"version":3,"sources":["lib/utils/constants.js","lib/utils/actions.js","lib/components/QuarterBackCondition.js","lib/components/QuarterBackConditions.js","lib/utils/types.js","lib/components/QuarterBackActionCreate.js","lib/components/QuarterBackActionDelete.js","lib/components/QuarterBackActions.js","lib/components/QuarterBackHeader.js","lib/utils/arrays.js","lib/utils/fields.js","lib/utils/operators.js","lib/utils/values.js","lib/components/inputs/Optgroup.js","lib/components/inputs/Option.js","lib/components/inputs/Opt.js","lib/utils/inputs.js","lib/components/inputs/Select.js","lib/components/QuarterBackFields.js","lib/components/QuarterBackOperators.js","lib/components/inputs/Checkbox.js","lib/components/inputs/Checkboxes.js","lib/components/inputs/Radio.js","lib/components/inputs/Radios.js","lib/components/inputs/Separator.js","lib/components/inputs/Text.js","lib/components/inputs/Textarea.js","lib/components/QuarterBackInputs.js","lib/components/QuarterBackValues.js","lib/components/QuarterBackRule.js","lib/components/QuarterBackRules.js","lib/components/QuarterBackTitle.js","lib/components/QuarterBackGroup.js","lib/utils/conditions.js","lib/components/QuarterBack.js","lib/index.js","App.js","registerServiceWorker.js","index.js"],"names":["OPERATORS","id","meta","fieldTypes","multipleValuesAllowed","numberOfInputs","FIELD_INPUT_CHECKBOX","FIELD_INPUT_SELECT","getActionByType","type","action","display","title","Object","objectSpread","groupAction","QB","ruleAction","getDefaultData","this","field","input","operator","value","fields","defaultCondition","rules","length","condition","QuarterBackCondition","handleClick","event","preventDefault","_this","props","handleUpdate","_this$props","styleClassMap","isActive","toUpperCase","className","addClass","addClassActive","QuarterBackConditionActive","react","concat","onClick","React","QuarterBackConditions","conditions","map","index","components_QuarterBackCondition","key","defaultProps","getTypeByQB","types","find","QuarterBackActionCreate","handleCreate","getActionData","actionIconMap","QuarterBackActionRule","QuarterBackAction","QuarterBackActionGroup","actionIcon","getRuleActionIcon","getGroupActionIcon","getOtherActionIcon","_this$props2","_this$props3","actionAddClass","_this$props4","filterTypes","softFilterTypes","includes","addClassAction","addClassCreate","getActionAddClass","ActionIcon","getActionIcon","disabled","QuarterBackActionDelete","handleDelete","QuarterBackActions","actions","toConsumableArray","getActions","components_QuarterBackActionCreate","components_QuarterBackActionDelete","QuarterBackHeader","components_QuarterBackConditions","components_QuarterBackActions","insertAt","items","item","slice","removeAt","filter","arguments","undefined","getFieldById","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","f","match","err","return","getFieldComponent","DefaultComponent","QBComponent","getDefaultOperatorsByField","operators","getOperatorById","Boolean","_ref3","getAllOperatorsByField","getDefaultValue","defaultValue","fieldValuesLength","Array","isArray","values","multiple","getDefaultValueByField","from","getValue","rule","prevOperator","getInputValues","prepSelectValues","opts","_ref","deleted","label","labelFilter","v","Optgroup","inputs_Opt","assign","Option","Opt","inputs_Optgroup","inputs_Option","getInputPlaceholder","placeholder","placeholderMap","actualPlaceholder","getInputType","getInputValue","parseInputValue","str","n","Math","floor","Number","isFinite","String","isInteger","parseInt","Select","handleChange","_event$target","target","options","option","selected","addInputClass","QuarterBackInput","QuarterBackSelect","onChange","QuarterBackFields","fieldId","defaultOperator","getDefaultOperatorByField","selectPlaceholder","inputs_Select","QuarterBackOperators","operatorId","data","lang","fieldOperators","operatorDisplayOverrides","addOperatorsClass","addOperatorClass","QuarterBackOperator","replace","Checkbox","checked","getMultiValue","getSingleValue","_this2","valuePresent","softFilterValues","isChecked","QuarterBackCheckbox","Checkboxes","_this$props$softFilte","QuarterBackCheckboxes","checkbox","checkboxIndex","inputs_Checkbox","Radio","QuarterBackRadio","Radios","QuarterBackRadios","radio","radioIndex","inputs_Radio","Separator","inputsSeparator","numValues","QuarterBackInputSeparator","Text","QuarterBackText","Textarea","QuarterBackTextarea","QuarterBackInputs","CheckboxesComponent","inputs_Separator","TextComponent","RadiosComponent","SelectComponent","TextareaComponent","CustomComponent","Error","QuarterBackValues","valueIndex","updatedValues","components_QuarterBackInputs","QuarterBackRule","operatorsConfig","_operatorsConfig$add","add","exclude","include","filteredOperators","filterOperatorsByExclude","_ref2","filterOperatorsByInclude","getAllOperators","addRuleClass","addRuleEditClass","QuarterBackRuleEdit","addRuleDeletedClass","QuarterBackRuleDeleted","addRuleActionsClass","QuarterBackRuleActions","deletedText","components_QuarterBackFields","components_QuarterBackOperators","components_QuarterBackValues","QuarterBackRules","components_QuarterBackRule","components_QuarterBackGroup","group","_type$defaultConditio","typeProps","objectWithoutProperties","QuarterBackTitle","QuarterBackGroup","groupRulesFragment","fragment","RulesComponent","components_QuarterBackTitle","components_QuarterBackHeader","QuarterBack","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","prevState","state","PowerGroup","defineProperty","searchValue","typeValue","react_default","a","createElement","inputs_Text","inputs_Checkboxes","Component","color","proximity","loading","_this3","setTimeout","borderColor","style","border","App","_this4","lib","not_in","JSON","stringify","isLocalhost","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6fe15d5f.chunk.js","sourcesContent":["// @flow\nimport type { Operator } from './Operator'\n\nconst FIELD_TYPE_STRING = 'string'\nconst FIELD_TYPE_INTEGER = 'integer'\nconst FIELD_TYPE_DOUBLE = 'double'\nconst FIELD_TYPE_DATE = 'date'\nconst FIELD_TYPE_TIME = 'time'\nconst FIELD_TYPE_DATETIME = 'datetime'\nconst FIELD_TYPE_BOOLEAN = 'boolean'\n\nconst QB_RULE = 'QBRule'\nconst QB_GROUP = 'QBGroup'\n\nconst OPERATORS: Array<Operator> = [\n  {\n    id: 'equal',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME,\n        FIELD_TYPE_BOOLEAN\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_equal',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME,\n        FIELD_TYPE_BOOLEAN\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'in',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: true,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_in',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: true,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'less',\n    meta: {\n      numberOfInputs: 1,\n      multipleValuesAllowed: false,\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ]\n    }\n  },\n  {\n    id: 'less_or_equal',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'greater',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'greater_or_equal',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'between',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 2\n    }\n  },\n  {\n    id: 'not_between',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 2\n    }\n  },\n  {\n    id: 'begins_with',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_begins_with',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'contains',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_contains',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'ends_with',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'not_ends_with',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 1\n    }\n  },\n  {\n    id: 'is_empty',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 0\n    }\n  },\n  {\n    id: 'is_not_empty',\n    meta: {\n      fieldTypes: [FIELD_TYPE_STRING],\n      multipleValuesAllowed: false,\n      numberOfInputs: 0\n    }\n  },\n  {\n    id: 'is_null',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME,\n        FIELD_TYPE_BOOLEAN\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 0\n    }\n  },\n  {\n    id: 'is_not_null',\n    meta: {\n      fieldTypes: [\n        FIELD_TYPE_STRING,\n        FIELD_TYPE_INTEGER,\n        FIELD_TYPE_DOUBLE,\n        FIELD_TYPE_DATE,\n        FIELD_TYPE_TIME,\n        FIELD_TYPE_DATETIME,\n        FIELD_TYPE_BOOLEAN\n      ],\n      multipleValuesAllowed: false,\n      numberOfInputs: 0\n    }\n  }\n]\n\nconst FIELD_INPUT_TEXT = 'text'\nconst FIELD_INPUT_NUMBER = 'number'\nconst FIELD_INPUT_TEXTAREA = 'textarea'\nconst FIELD_INPUT_RADIO = 'radio'\nconst FIELD_INPUT_CHECKBOX = 'checkbox'\nconst FIELD_INPUT_SELECT = 'select'\n\nexport {\n  FIELD_INPUT_TEXT,\n  FIELD_INPUT_NUMBER,\n  FIELD_INPUT_TEXTAREA,\n  FIELD_INPUT_RADIO,\n  FIELD_INPUT_CHECKBOX,\n  FIELD_INPUT_SELECT,\n  FIELD_TYPE_STRING,\n  FIELD_TYPE_INTEGER,\n  FIELD_TYPE_DOUBLE,\n  FIELD_TYPE_DATE,\n  FIELD_TYPE_TIME,\n  FIELD_TYPE_DATETIME,\n  FIELD_TYPE_BOOLEAN,\n  QB_RULE,\n  QB_GROUP,\n  OPERATORS\n}\n","// @flow\nimport type { Action } from './Action'\nimport type { Type } from './Type'\nimport { QB_RULE, QB_GROUP } from './constants'\n\nfunction getActionByQB (actions: Array<Action>, QB: string): ?Action {\n  return actions.find(action => action.QB === QB)\n}\n\nfunction getActionByType (type: Type): Action {\n  if (type.action != null) {\n    return type.action\n  }\n\n  const display = type.title != null ? type.title : 'Custom'\n\n  return {\n    ...groupAction,\n    QB: type.QB,\n    display // TODO: Way to customize...\n  }\n}\n\nconst ruleAction: Action = {\n  QB: QB_RULE,\n  display: 'Rule',\n  getDefaultData: function () {\n    return {\n      QB: this.QB,\n      field: '',\n      id: '',\n      input: '',\n      operator: null,\n      type: '',\n      value: null\n    }\n  }\n}\n\nconst groupAction: Action = {\n  QB: QB_GROUP,\n  display: 'Group',\n  getDefaultData: function (fields, defaultCondition) {\n    const rules = fields != null && fields.length > 0\n      ? [ruleAction.getDefaultData()]\n      : []\n\n    return {\n      QB: this.QB,\n      condition: defaultCondition,\n      rules\n    }\n  }\n}\n\nexport {\n  getActionByQB,\n  getActionByType,\n  ruleAction,\n  groupAction\n}\n","// @flow\nimport * as React from 'react'\nimport type { Condition } from '../utils/Condition'\nimport type { GroupConditionFragment } from '../utils/Group'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\n\ntype Props = {\n  condition: Condition,\n  styleClassMap: StyleClassMap,\n  value: string,\n  handleUpdate: (fragment: GroupConditionFragment) => void\n}\n\nclass QuarterBackCondition extends React.Component<Props> {\n  handleClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n\n    const { condition } = this.props\n\n    this.props.handleUpdate({ condition: condition.value })\n  }\n\n  render () {\n    const {\n      condition,\n      styleClassMap,\n      value\n    } = this.props\n\n    const isActive = condition.value.toUpperCase() === value.toUpperCase()\n\n    const className = isActive ? 'QuarterBackConditionActive' : ''\n    const addClass = styleClassMap.QuarterBackCondition || ''\n    const addClassActive = (\n      isActive && styleClassMap.QuarterBackConditionActive != null\n    )\n      ? styleClassMap.QuarterBackConditionActive\n      : ''\n\n    return (\n      <button\n        className={`QuarterBackCondition ${className} ${addClass} ${addClassActive}`}\n        onClick={this.handleClick}\n      >\n        {condition.display}\n      </button>\n    )\n  }\n}\n\nexport default QuarterBackCondition\n","// @flow\nimport * as React from 'react'\nimport type { Condition } from '../utils/Condition'\nimport type { GroupConditionFragment } from '../utils/Group'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport QuarterBackCondition from './QuarterBackCondition'\n\ntype Props = {\n  conditions: Array<Condition>,\n  styleClassMap: StyleClassMap,\n  value: string,\n  handleUpdate: (fragment: GroupConditionFragment) => void,\n}\n\nclass QuarterBackConditions extends React.Component<Props> {\n  static defaultProps = {\n    conditions: []\n  }\n\n  render () {\n    const {\n      conditions,\n      styleClassMap,\n      value,\n      handleUpdate\n    } = this.props\n\n    if (conditions.length < 1) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackConditions != null\n      ? styleClassMap.QuarterBackConditions\n      : ''\n\n    return (\n      <div className={`QuarterBackConditions ${addClass}`}>\n        {conditions.map((condition, index) => {\n          return (\n            <QuarterBackCondition\n              key={index}\n              condition={condition}\n              styleClassMap={styleClassMap}\n              value={value}\n              handleUpdate={handleUpdate}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackConditions\n","import type { Type } from './Type'\n\nfunction getTypeByQB (types: Array<Type>, QB: string): ?Type {\n  return types.find(type => type.QB === QB)\n}\n\nexport {\n  getTypeByQB\n}\n","// @flow\nimport * as React from 'react'\nimport type { Action } from '../utils/Action'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { EmptyProps } from '../utils/Props'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport { QB_RULE, QB_GROUP } from '../utils/constants'\nimport { getTypeByQB } from '../utils/types'\n\ntype Props = {\n  action: Action,\n  actionIconMap: ActionIconMap,\n  defaultCondition: string,\n  fields: Array<Field>,\n  filterTypes: Array<string>,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  types: Array<Type>,\n  handleCreate: (data: Data) => void\n}\n\nclass QuarterBackActionCreate extends React.Component<Props> {\n  getRuleActionIcon (): React.ComponentType<EmptyProps> {\n    const {\n      actionIconMap\n    } = this.props\n\n    if (actionIconMap.QuarterBackActionRule != null) {\n      return actionIconMap.QuarterBackActionRule\n    }\n\n    if (actionIconMap.QuarterBackActionCreate != null) {\n      return actionIconMap.QuarterBackActionCreate\n    }\n\n    if (actionIconMap.QuarterBackAction != null) {\n      return actionIconMap.QuarterBackAction\n    }\n\n    return () => null\n  }\n\n  getGroupActionIcon (): React.ComponentType<EmptyProps> {\n    const {\n      actionIconMap\n    } = this.props\n\n    if (actionIconMap.QuarterBackActionGroup != null) {\n      return actionIconMap.QuarterBackActionGroup\n    }\n\n    if (actionIconMap.QuarterBackActionCreate != null) {\n      return actionIconMap.QuarterBackActionCreate\n    }\n\n    if (actionIconMap.QuarterBackAction != null) {\n      return actionIconMap.QuarterBackAction\n    }\n\n    return () => null\n  }\n\n  getOtherActionIcon (type: Type): React.ComponentType<EmptyProps> {\n    const {\n      actionIconMap\n    } = this.props\n\n    if (type.actionIcon != null) {\n      return type.actionIcon\n    }\n\n    if (actionIconMap.QuarterBackActionCreate != null) {\n      return actionIconMap.QuarterBackActionCreate\n    }\n\n    if (actionIconMap.QuarterBackAction != null) {\n      return actionIconMap.QuarterBackAction\n    }\n\n    return () => null\n  }\n\n  getActionIcon (): React.ComponentType<EmptyProps> {\n    const {\n      action,\n      types\n    } = this.props\n\n    switch (action.QB) {\n      case QB_RULE:\n        return this.getRuleActionIcon()\n      case QB_GROUP:\n        return this.getGroupActionIcon()\n      default:\n        const type = getTypeByQB(types, action.QB)\n        return this.getOtherActionIcon(type)\n    }\n  }\n\n  getActionData (): Data {\n    const {\n      action,\n      defaultCondition,\n      fields,\n      types\n    } = this.props\n\n    switch (action.QB) {\n      case QB_RULE:\n        return action.getDefaultData()\n      case QB_GROUP:\n        return action.getDefaultData(fields, defaultCondition)\n      default:\n        const type = getTypeByQB(types, action.QB)\n        return action.getDefaultData(\n          type.fields,\n          type.defaultCondition || defaultCondition\n        )\n    }\n  }\n\n  getActionAddClass (): string {\n    const {\n      action,\n      styleClassMap,\n      types\n    } = this.props\n\n    switch (action.QB) {\n      case QB_RULE:\n        return styleClassMap.QuarterBackActionRule != null\n          ? styleClassMap.QuarterBackActionRule\n          : ''\n      case QB_GROUP:\n        return styleClassMap.QuarterBackActionGroup != null\n          ? styleClassMap.QuarterBackActionGroup\n          : ''\n      default:\n        const type = getTypeByQB(types, action.QB)\n        return type.actionAddClass != null\n          ? type.actionAddClass\n          : ''\n    }\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n\n    const {\n      handleCreate\n    } = this.props\n\n    handleCreate(this.getActionData())\n  }\n\n  render () {\n    const {\n      action,\n      filterTypes,\n      softFilterTypes,\n      styleClassMap\n    } = this.props\n\n    if (filterTypes.includes(action.QB)) {\n      return null\n    }\n\n    const addClassAction = styleClassMap.QuarterBackAction != null\n      ? styleClassMap.QuarterBackAction\n      : ''\n\n    const addClassCreate = styleClassMap.QuarterBackActionCreate != null\n      ? styleClassMap.QuarterBackActionCreate\n      : ''\n\n    const addClass = this.getActionAddClass()\n\n    const ActionIcon = this.getActionIcon()\n\n    return (\n      <button\n        className={`QuarterBackActionCreate ${addClassAction} ${addClassCreate} ${addClass}`}\n        disabled={softFilterTypes.includes(action.QB)}\n        onClick={this.handleClick}\n      >\n        <ActionIcon /> {action.display}\n      </button>\n    )\n  }\n}\n\nexport default QuarterBackActionCreate\n","// @flow\nimport * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { EmptyProps } from '../utils/Props'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  index: number,\n  styleClassMap: StyleClassMap,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackActionDelete extends React.Component<Props> {\n  getActionIcon (): React.ComponentType<EmptyProps> {\n    const {\n      actionIconMap\n    } = this.props\n\n    if (actionIconMap.QuarterBackActionDelete != null) {\n      return actionIconMap.QuarterBackActionDelete\n    }\n\n    if (actionIconMap.QuarterBackAction != null) {\n      return actionIconMap.QuarterBackAction\n    }\n\n    return () => null\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n\n    const {\n      index,\n      handleDelete\n    } = this.props\n\n    handleDelete(index)\n  }\n\n  render () {\n    const {\n      index,\n      styleClassMap\n    } = this.props\n\n    // We do not want to delete the \"root\" element, which will have an\n    // index set to -1\n    if (index < 0) {\n      return null\n    }\n\n    const addClassAction = styleClassMap.QuarterBackAction != null\n      ? styleClassMap.QuarterBackAction\n      : ''\n    const addClass = styleClassMap.QuarterBackActionDelete != null\n      ? styleClassMap.QuarterBackActionDelete\n      : ''\n\n    const ActionIcon = this.getActionIcon()\n\n    return (\n      <button\n        className={`QuarterBackActionDelete ${addClassAction} ${addClass}`}\n        onClick={this.handleClick}\n      >\n        <ActionIcon /> Delete\n      </button>\n    )\n  }\n}\n\nexport default QuarterBackActionDelete\n","// @flow\nimport * as React from 'react'\nimport type { Action } from '../utils/Action'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport { ruleAction, groupAction, getActionByType } from '../utils/actions'\nimport QuarterBackActionCreate from './QuarterBackActionCreate'\nimport QuarterBackActionDelete from './QuarterBackActionDelete'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  defaultCondition: string,\n  fields: Array<Field>,\n  filterTypes: Array<string>,\n  index: number,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  types: Array<Type>,\n  handleCreate: (data: Data) => void,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackActions extends React.Component<Props> {\n  static defaultProps = {\n    fields: [],\n    types: []\n  }\n\n  getActions (): Array<Action> {\n    const {\n      fields,\n      types\n    } = this.props\n\n    if (fields.length > 0) {\n      return [ruleAction, groupAction]\n    }\n\n    const actions = types.map(getActionByType)\n\n    if (actions.length < 1) {\n      return []\n    }\n\n    return [...actions, groupAction]\n  }\n\n  render () {\n    const {\n      actionIconMap,\n      defaultCondition,\n      fields,\n      filterTypes,\n      index,\n      softFilterTypes,\n      styleClassMap,\n      types,\n      handleCreate,\n      handleDelete\n    } = this.props\n\n    const addClass = styleClassMap.QuarterBackActions != null\n      ? styleClassMap.QuarterBackActions\n      : ''\n\n    return (\n      <div className={`QuarterBackActions ${addClass}`}>\n        {this.getActions().map((action, index) => {\n          return (\n            <QuarterBackActionCreate\n              key={index}\n              action={action}\n              actionIconMap={actionIconMap}\n              defaultCondition={defaultCondition}\n              fields={fields}\n              filterTypes={filterTypes}\n              softFilterTypes={softFilterTypes}\n              styleClassMap={styleClassMap}\n              types={types}\n              handleCreate={handleCreate}\n            />\n          )\n        })}\n        <QuarterBackActionDelete\n          actionIconMap={actionIconMap}\n          index={index}\n          styleClassMap={styleClassMap}\n          handleDelete={handleDelete}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackActions\n","// @flow\nimport * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Condition } from '../utils/Condition'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { GroupConditionFragment } from '../utils/Group'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport QuarterBackConditions from './QuarterBackConditions'\nimport QuarterBackActions from './QuarterBackActions'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  condition: string,\n  conditions: Array<Condition>,\n  defaultCondition: string,\n  fields: Array<Field>,\n  filterTypes: Array<string>,\n  index: number,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  types: Array<Type>,\n  handleCreate: (data: Data) => void,\n  handleUpdate: (fragment: GroupConditionFragment) => void,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackHeader extends React.Component<Props> {\n  render () {\n    const {\n      actionIconMap,\n      condition,\n      conditions,\n      defaultCondition,\n      fields,\n      filterTypes,\n      index,\n      softFilterTypes,\n      styleClassMap,\n      types,\n      handleCreate,\n      handleUpdate,\n      handleDelete\n    } = this.props\n\n    const addClass = styleClassMap.QuarterBackHeader != null\n      ? styleClassMap.QuarterBackHeader\n      : ''\n\n    return (\n      <div className={`QuarterBackHeader ${addClass}`}>\n        <QuarterBackConditions\n          conditions={conditions}\n          styleClassMap={styleClassMap}\n          value={condition}\n          handleUpdate={handleUpdate}\n        />\n        <QuarterBackActions\n          actionIconMap={actionIconMap}\n          defaultCondition={defaultCondition}\n          fields={fields}\n          filterTypes={filterTypes}\n          index={index}\n          softFilterTypes={softFilterTypes}\n          styleClassMap={styleClassMap}\n          types={types}\n          handleCreate={handleCreate}\n          handleDelete={handleDelete}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackHeader\n","function insertAt (items: Array<mixed>, index: number, item: mixed): Array<mixed> {\n  return [\n    ...items.slice(0, index),\n    item,\n    ...items.slice(index + 1)\n  ]\n}\n\nfunction removeAt (items: Array<mixed>, index: number): Array<mixed> {\n  return items.filter((...args) => args[1] !== index)\n}\n\nexport {\n  insertAt,\n  removeAt\n}\n","// @flow\nimport * as React from 'react'\nimport type { Field } from './Field'\n\nfunction getFieldById (fields: Array<Field>, id: string): ?Field {\n  for (let f of fields) {\n    if (f.fields) {\n      let match = getFieldById(f.fields, id)\n\n      if (match) {\n        return match\n      }\n    } else if (f.id === id) {\n      return f\n    }\n  }\n}\n\nfunction getFieldComponent (field: Field, DefaultComponent: React.Component): React.Component {\n  return field.QBComponent != null ? field.QBComponent : DefaultComponent\n}\n\nexport {\n  getFieldById,\n  getFieldComponent\n}\n","// @flow\nimport type { Field } from './Field'\nimport type { Operator } from './Operator'\nimport type { OperatorsConfig } from './OperatorsConfig'\nimport { OPERATORS } from './constants'\n\nfunction filterOperatorsByExclude (\n  operators: Array<Operator>,\n  exclude?: Array<string>\n): Array<Operator> {\n  if (!exclude || exclude.length < 1) {\n    return operators\n  }\n\n  return operators.filter(({ id }) => !exclude.includes(id))\n}\n\nfunction filterOperatorsByInclude (\n  operators: Array<Operator>,\n  include?: Array<string>\n): Array<Operator> {\n  if (!include) {\n    return operators\n  }\n\n  if (include.length < 1) {\n    return []\n  }\n\n  return operators.filter(({ id }) => include.includes(id))\n}\n\nfunction getAllOperators (operatorsConfig: OperatorsConfig): Array<Operator> {\n  const {\n    add = [],\n    exclude,\n    include\n  } = operatorsConfig\n\n  const filteredOperators =\n    filterOperatorsByExclude(\n      filterOperatorsByInclude(OPERATORS, include),\n      exclude\n    )\n\n  return [...filteredOperators, ...add]\n}\n\n/**\n * Takes a field and return applicable operators based on the type\n * of the field\n */\nfunction getAllOperatorsByField (\n  field: Field,\n  operators: Array<Operator>\n): Array<Operator> {\n  return operators.filter(({ meta: { fieldTypes } }) => {\n    return fieldTypes.includes(field.type)\n  })\n}\n\n/**\n * Takes a field and returns all available operators applicable to the\n * field, or a user specified subset\n */\nfunction getDefaultOperatorsByField (\n  field: Field,\n  operators: Array<Operator>\n): Array<Operator> {\n  if (field.operators != null) {\n    return field.operators\n      .map(id => getOperatorById(id, operators))\n      .filter(Boolean)\n  }\n  return getAllOperatorsByField(field, operators)\n}\n\n/**\n * Takes a field and returns the user specified default operator or\n * first operator of list of all applicable operators\n */\nfunction getDefaultOperatorByField (\n  field: ?Field,\n  operators: Array<Operator>\n): ?Operator {\n  if (!field) {\n    return null\n  }\n\n  if (field.defaultOperator) {\n    return getOperatorById(field.defaultOperator, operators)\n  }\n\n  return getDefaultOperatorsByField(field, operators)[0]\n}\n\n/**\n * Takes an operator id and finds and operator\n */\nfunction getOperatorById (\n  id: string,\n  operators: Array<Operator>\n): ?Operator {\n  return operators.find(operator => operator.id === id)\n}\n\nexport {\n  getAllOperators,\n  getAllOperatorsByField,\n  getDefaultOperatorsByField,\n  getDefaultOperatorByField,\n  getOperatorById\n}\n","// @flow\nimport type { Field } from './Field'\nimport type { Operator } from './Operator'\nimport type { Rule } from './Rule'\nimport type {\n  EmptyValue,\n  SingleValue,\n  MultiValue,\n  NestedMultiValue,\n  Value\n} from './Value'\nimport { FIELD_INPUT_CHECKBOX, FIELD_INPUT_SELECT } from './constants'\nimport { getOperatorById } from './operators'\n\nfunction getDefaultValueByField (\n  field: Field\n): EmptyValue | SingleValue | MultiValue {\n  // allow user to provide value (it could be invalid, however)\n  if (field.defaultValue !== undefined) {\n    return field.defaultValue\n  }\n\n  const fieldValuesIsArray = Array.isArray(field.values)\n  const fieldValuesLength = fieldValuesIsArray ? field.values.length : -1\n\n  // for checkboxes with values array length > 1, we want to return an array\n  // since multiple values are allowed\n  if (field.input === FIELD_INPUT_CHECKBOX && fieldValuesLength > 1) {\n    return []\n  }\n\n  if (field.input === FIELD_INPUT_SELECT) {\n    // Similar to checkboxes; allow for multiple values\n    if (field.multiple === true) {\n      return []\n    }\n    // Default to the first defined value option in select values\n    if (fieldValuesLength > 0) {\n      return field.values[0]\n    }\n  }\n\n  return null\n}\n\nfunction getDefaultValue (field: ?Field, operator: ?Operator): Value {\n  if (!field || !operator) {\n    return null\n  }\n\n  const defaultValue = getDefaultValueByField(field)\n\n  if (operator.meta.numberOfInputs < 2) {\n    return defaultValue\n  }\n\n  return Array.from(\n    { length: operator.meta.numberOfInputs },\n    () => defaultValue\n  )\n}\n\nfunction getValue (field: ?Field, operator: ?Operator, operators, rule: Rule): Value {\n  if (!field || !operator) {\n    return null\n  }\n\n  const prevOperator = getOperatorById(rule.operator, operators)\n\n  if (\n    prevOperator &&\n    prevOperator.meta.numberOfInputs !== operator.meta.numberOfInputs\n  ) {\n    return getDefaultValue(field, operator)\n  }\n\n  return rule.value\n}\n\n/**\n * Helper func that abstracts away the difference between initial value(s)\n * for single and multi-input (e.g., 'between' operator will result in\n * two inputs). For example, a single value for a text field will still\n * return an array of length=1 (e.g., `[ '' ]`), while a 'between' operator\n * field for a 'number' would return an array with length=2 (e.g.,\n * `[ '1', '2' ]`)\n */\nfunction getInputValues (\n  field: ?Field,\n  operator: ?Operator,\n  rule: Rule\n): EmptyValue | MultiValue | NestedMultiValue {\n  if (!field || !operator || operator.meta.numberOfInputs < 1) {\n    return null\n  }\n\n  if (operator.meta.numberOfInputs < 2) {\n    return [rule.value]\n  }\n\n  return rule.value\n}\n\nfunction prepSelectValues (values, opts = {}) {\n  return values\n    .map(({deleted, fields, id, label}) => {\n      if (deleted) {\n        return null\n      }\n\n      const display = opts.labelFilter\n        ? opts.labelFilter(label, fields, id)\n        : label\n\n      if (fields) {\n        return {\n          fields: prepSelectValues(fields),\n          label: display\n        }\n      }\n\n      return {\n        label: display,\n        value: id\n      }\n    })\n    .filter(v => v !== null)\n}\n\nexport {\n  getDefaultValue,\n  getValue,\n  getInputValues,\n  prepSelectValues\n}\n","// @flow\nimport * as React from 'react'\nimport Opt from './Opt'\n\ntype Props = {\n  fields: Array,\n  label: string,\n}\n\nclass Optgroup extends React.Component<Props> {\n  render () {\n    const {\n      fields,\n      label\n    } = this.props\n\n    return (\n      <optgroup label={label}>\n        {fields.map((field, index) =>\n          <Opt key={label + index} {...field} />\n        )}\n      </optgroup>\n    )\n  }\n}\n\nexport default Optgroup\n","// @flow\nimport * as React from 'react'\n\ntype Props = {\n  label: string,\n  value: string\n}\n\nclass Option extends React.Component<Props> {\n  render () {\n    const {\n      label,\n      value\n    } = this.props\n\n    return <option value={value}>{label}</option>\n  }\n}\n\nexport default Option\n","// @flow\nimport * as React from 'react'\nimport Optgroup from './Optgroup'\nimport Option from './Option'\n\ntype Props = {\n  fields?: Array,\n  label: string,\n  value?: string\n}\n\n/**\n * Switch between optgroup and option based on certain\n * prop presence\n */\nclass Opt extends React.Component<Props> {\n  render () {\n    const {\n      fields,\n      label,\n      value\n    } = this.props\n\n    if (fields) {\n      return <Optgroup fields={fields} label={label} />\n    }\n\n    return <Option label={label} value={value} />\n  }\n}\n\nexport default Opt\n","function getInputPlaceholder (\n  placeholder?: string | Array<string>,\n  placeholderMap?: { [key: string]: string | Array<string> },\n  operator?: string,\n  index: number\n): string {\n  const actualPlaceholder = (placeholderMap && operator)\n    ? (placeholderMap[operator] || placeholder)\n    : placeholder\n\n  if (!actualPlaceholder) {\n    return ''\n  }\n\n  if (typeof actualPlaceholder === 'string') {\n    return actualPlaceholder\n  }\n\n  return actualPlaceholder[index] || ''\n}\n\nfunction getInputType (type: string): string {\n  switch (type) {\n    case 'integer':\n    case 'double':\n      return 'number'\n    case 'date':\n    case 'time':\n      return type\n    case 'datetime':\n      return 'datetime-local'\n    default:\n      return 'text'\n  }\n}\n\nfunction getInputValue (value) {\n  if (value === null) {\n    return ''\n  }\n  return value\n}\n\nfunction isInteger (str) {\n  const n = Math.floor(Number(str))\n  return isFinite(n) && String(n) === str\n}\n\nfunction parseInputValue (value, type) {\n  switch (type) {\n    case 'boolean':\n      return Boolean(value)\n    case 'integer':\n      return isInteger(value) ? parseInt(value, 10) : value\n    default:\n      return value\n  }\n}\n\nexport {\n  getInputPlaceholder,\n  getInputType,\n  getInputValue,\n  parseInputValue\n}\n","// @flow\nimport * as React from 'react'\nimport type { FieldValue } from '../../utils/Field'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue } from '../../utils/Value'\nimport Opt from './Opt'\nimport { getInputValue, parseInputValue } from '../../utils/inputs'\n\ntype Props = {\n  index: number,\n  multiple: boolean,\n  styleClassMap: StyleClassMap,\n  values?: Array<FieldValue>,\n  value: null | string,\n  handleUpdate: (value: SingleValue, index: number) => void\n}\n\nclass Select extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    multiple: false,\n    styleClassMap: {}\n  }\n\n  getValue (event) {\n    const {\n      multiple,\n      type\n    } = this.props\n\n    const { target: { options, value } } = event\n\n    if (!multiple) {\n      return parseInputValue(value, type)\n    }\n\n    return [...options]\n      .filter(option => option.selected)\n      .map(option => parseInputValue(option.value, type))\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLSelectElement>) => {\n    const {\n      index,\n      handleUpdate\n    } = this.props\n\n    handleUpdate(this.getValue(event), index)\n  }\n\n  render () {\n    const {\n      multiple,\n      styleClassMap,\n      value,\n      values\n    } = this.props\n\n    if (!values) {\n      return null\n    }\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackSelect != null\n      ? styleClassMap.QuarterBackSelect\n      : ''\n\n    return (\n      <select\n        className={`QuarterBackSelect ${addInputClass} ${addClass}`}\n        multiple={multiple}\n        value={getInputValue(value)}\n        onChange={this.handleChange}\n      >\n        {values.map((option, index) => {\n          return <Opt key={option.label + index} {...option} />\n        })}\n      </select>\n    )\n  }\n}\n\nexport default Select\n","// @flow\nimport * as React from 'react'\nimport type { Field } from '../utils/Field'\nimport type { Operator } from '../utils/Operator'\nimport type { Rule } from '../utils/Rule'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { SingleValue } from '../utils/Value'\nimport { getFieldById } from '../utils/fields'\nimport { getDefaultOperatorByField } from '../utils/operators'\nimport { getDefaultValue, prepSelectValues } from '../utils/values'\nimport Select from './inputs/Select'\n\ntype Props = {\n  fields: Array<Field>,\n  index: number,\n  operators: Array<Operator>,\n  rule: Rule,\n  selectPlaceholder: string,\n  styleClassMap: StyleClassMap,\n  handleUpdate: (data: Rule, index: number) => void\n}\n\nclass QuarterBackFields extends React.Component<Props> {\n  handleUpdate = (fieldId: SingleValue) => {\n    const {\n      fields,\n      index,\n      operators,\n      rule,\n      handleUpdate\n    } = this.props\n\n    const field = getFieldById(fields, fieldId)\n    const operator = getDefaultOperatorByField(field, operators)\n    const value = getDefaultValue(field, operator)\n\n    const data = {\n      ...rule,\n      field: field ? field.id : '',\n      id: field ? field.id : '',\n      input: field ? field.input : '',\n      operator: operator ? operator.id : null,\n      type: field ? field.type : '',\n      value\n    }\n\n    handleUpdate(data, index)\n  }\n\n  render () {\n    const {\n      fields,\n      rule,\n      selectPlaceholder,\n      styleClassMap\n    } = this.props\n\n    const defaultValue = { label: selectPlaceholder, id: '' }\n    const values = [ defaultValue, ...fields ]\n\n    const addClass = styleClassMap.QuarterBackFields || ''\n\n    return (\n      <div className={`QuarterBackFields ${addClass}`}>\n        <Select\n          styleClassMap={styleClassMap}\n          value={rule.id}\n          values={prepSelectValues(values)}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackFields\n","// @flow\nimport * as React from 'react'\nimport type { Field } from '../utils/Field'\nimport type { Operator } from '../utils/Operator'\nimport type { Rule } from '../utils/Rule'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport { getOperatorById, getDefaultOperatorsByField } from '../utils/operators'\nimport { getValue } from '../utils/values'\nimport Select from './inputs/Select'\n\ntype Props = {\n  field: Field,\n  index: number,\n  lang: Object,\n  operators: Array<Operator>,\n  rule: Rule,\n  styleClassMap: StyleClassMap,\n  handleUpdate: (data: Rule, index: number) => void\n}\n\nclass QuarterBackOperators extends React.Component<Props> {\n  handleUpdate = (operatorId: string) => {\n    const {\n      field,\n      index,\n      operators,\n      rule\n    } = this.props\n\n    const operator = getOperatorById(operatorId, operators)\n\n    const data = {\n      ...rule,\n      operator: operatorId,\n      value: getValue(field, operator, operators, rule)\n    }\n\n    this.props.handleUpdate(data, index)\n  }\n\n  render () {\n    const {\n      field,\n      lang,\n      operators,\n      rule,\n      styleClassMap\n    } = this.props\n\n    if (rule.operator === null) {\n      return null\n    }\n\n    const fieldOperators = getDefaultOperatorsByField(field, operators)\n\n    if (fieldOperators.length < 1) {\n      return null\n    }\n\n    const operatorDisplayOverrides = lang.operators || {}\n\n    const addOperatorsClass = styleClassMap.QuarterBackOperators || ''\n    const addOperatorClass = styleClassMap.QuarterBackOperator || ''\n\n    if (fieldOperators.length === 1) {\n      return (\n        <div className={`QuarterBackOperators ${addOperatorsClass}`}>\n          <span className={`QuarterBackOperator ${addOperatorClass}`}>\n            {operatorDisplayOverrides[rule.operator] ||\n             rule.operator.replace(/_/g, ' ')}\n          </span>\n        </div>\n      )\n    }\n\n    return (\n      <div className={`QuarterBackOperators ${addOperatorsClass}`}>\n        <Select\n          styleClassMap={styleClassMap}\n          value={rule.operator}\n          values={fieldOperators.map(operator => {\n            return {\n              label: (\n                operatorDisplayOverrides[operator.id] ||\n                operator.id.replace(/_/g, ' ')\n              ),\n              value: operator.id\n            }\n          })}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackOperators\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue, MultiValue } from '../../utils/Value'\n\ntype Props = {\n  checked: boolean | number | string | Array<string>,\n  index: number,\n  label: string,\n  softFilterValues: Array<string>,\n  styleClassMap: StyleClassMap,\n  value: boolean | number | string,\n  handleUpdate: (value: SingleValue | MultiValue, index: number) => void\n}\n\nclass Checkbox extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  getSingleValue (checked: boolean): boolean | number | string {\n    // TODO: bool/int? default\n    return checked ? this.props.value : ''\n  }\n\n  getMultiValue (checked: boolean): Array<string> {\n    const valuePresent = this.props.checked.includes(this.props.value)\n\n    if (checked) {\n      return valuePresent\n        ? this.props.checked\n        : [...this.props.checked, this.props.value]\n    }\n\n    return valuePresent\n      ? this.props.checked.filter(value => value !== this.props.value)\n      : this.props.checked\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const { checked, index } = this.props\n\n    const value = Array.isArray(checked)\n      ? this.getMultiValue(event.target.checked)\n      : this.getSingleValue(event.target.checked)\n\n    this.props.handleUpdate(value, index)\n  }\n\n  render () {\n    const {\n      checked,\n      label,\n      softFilterValues,\n      styleClassMap,\n      value\n    } = this.props\n\n    const isChecked = Array.isArray(checked)\n      ? checked.includes(value)\n      : value === checked\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackCheckbox != null\n      ? styleClassMap.QuarterBackCheckbox\n      : ''\n\n    return (\n      <label>\n        <input\n          checked={isChecked}\n          className={`QuarterBackCheckbox ${addInputClass} ${addClass}`}\n          disabled={softFilterValues.includes(value)}\n          type='checkbox'\n          onChange={this.handleChange}\n        />{' '}\n        <span>{label}</span>\n      </label>\n    )\n  }\n}\n\nexport default Checkbox\n","// @flow\nimport * as React from 'react'\nimport type { FieldValue } from '../../utils/Field'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { NonEmptyValue } from '../../utils/Value'\nimport Checkbox from './Checkbox'\n\ntype Props = {\n  index: number,\n  softFilterValues: Array<string>,\n  styleClassMap: StyleClassMap,\n  values?: Array<FieldValue>,\n  value: NonEmptyValue,\n  handleUpdate: (value: NonEmptyValue, index: number) => void\n}\n\nclass Checkboxes extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  render () {\n    const {\n      index,\n      softFilterValues = [],\n      styleClassMap,\n      value,\n      values,\n      handleUpdate\n    } = this.props\n\n    if (!values) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackCheckboxes != null\n      ? styleClassMap.QuarterBackCheckboxes\n      : ''\n\n    return (\n      <div className={`QuarterBackCheckboxes ${addClass}`}>\n        {values.map((checkbox, checkboxIndex) => {\n          return (\n            <Checkbox\n              key={checkboxIndex}\n              checked={value}\n              index={index}\n              softFilterValues={softFilterValues}\n              styleClassMap={styleClassMap}\n              {...checkbox}\n              handleUpdate={handleUpdate}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Checkboxes\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue } from '../../utils/Value'\n\ntype Props = {\n  checked: string | Array<string>,\n  index: number,\n  label: string,\n  styleClassMap: StyleClassMap,\n  value: string,\n  handleUpdate: (value: SingleValue, index: number) => void\n}\n\nclass Radio extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const {\n      index,\n      value,\n      handleUpdate\n    } = this.props\n\n    const { target: { checked } } = event\n\n    if (!checked) {\n      return\n    }\n\n    handleUpdate(value, index)\n  }\n\n  render () {\n    const {\n      checked,\n      label,\n      styleClassMap,\n      value\n    } = this.props\n\n    const isChecked = checked === value\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackRadio != null\n      ? styleClassMap.QuarterBackRadio\n      : ''\n\n    return (\n      <label>\n        <input\n          checked={isChecked}\n          className={`QuarterBackRadio ${addInputClass} ${addClass}`}\n          type='radio'\n          onChange={this.handleChange}\n        />{' '}\n        {label}\n      </label>\n    )\n  }\n}\n\nexport default Radio\n","// @flow\nimport * as React from 'react'\nimport type { FieldValue } from '../../utils/Field'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { NonEmptyValue } from '../../utils/Value'\nimport Radio from './Radio'\n\ntype Props = {\n  index: number,\n  styleClassMap: StyleClassMap,\n  values?: Array<FieldValue>,\n  value: NonEmptyValue,\n  handleUpdate: (value: NonEmptyValue, index: number) => void\n}\n\nclass Radios extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  render () {\n    const {\n      index,\n      styleClassMap,\n      value,\n      values,\n      handleUpdate\n    } = this.props\n\n    if (!values) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackRadios != null\n      ? styleClassMap.QuarterBackRadios\n      : ''\n\n    return (\n      <div className={`QuarterBackRadios ${addClass}`}>\n        {values.map((radio, radioIndex) => {\n          return (\n            <Radio\n              key={radioIndex}\n              checked={value}\n              index={index}\n              styleClassMap={styleClassMap}\n              {...radio}\n              handleUpdate={handleUpdate}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Radios\n","// @flow\nimport * as React from 'react'\n\ntype Props = {\n  inputsSeparator: string,\n  index: number,\n  numValues: number\n}\n\nclass Separator extends React.Component<Props> {\n  render () {\n    const {\n      inputsSeparator,\n      index,\n      numValues,\n      styleClassMap\n    } = this.props\n\n    if (!inputsSeparator || (index + 1) >= numValues) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackInputSeparator || ''\n\n    return (\n      <span className={`QuarterBackInputSeparator ${addClass}`}>\n        {inputsSeparator}\n      </span>\n    )\n  }\n}\n\nexport default Separator\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue } from '../../utils/Value'\nimport {\n  getInputPlaceholder,\n  getInputType,\n  getInputValue,\n  parseInputValue\n} from '../../utils/inputs'\n\ntype Props = {\n  index: number,\n  operator?: string,\n  placeholder?: string,\n  placeholderMap?: { [key: string]: string | Array<string> },\n  styleClassMap: StyleClassMap,\n  type: string,\n  value: string,\n  handleUpdate: (value: SingleValue, index: number) => void\n}\n\nclass Text extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {},\n    type: 'string'\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const {\n      index,\n      handleUpdate,\n      type\n    } = this.props\n\n    const { target: { value } } = event\n\n    handleUpdate(parseInputValue(value, type), index)\n  }\n\n  render () {\n    const {\n      index,\n      operator,\n      placeholder,\n      placeholderMap,\n      styleClassMap,\n      type,\n      value\n    } = this.props\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackText != null\n      ? styleClassMap.QuarterBackText\n      : ''\n\n    return (\n      <input\n        className={`QuarterBackText ${addInputClass} ${addClass}`}\n        placeholder={getInputPlaceholder(\n          placeholder,\n          placeholderMap,\n          operator,\n          index\n        )}\n        type={getInputType(type)}\n        value={getInputValue(value)}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nexport default Text\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../../utils/StyleClassMap'\nimport type { SingleValue } from '../../utils/Value'\nimport { getInputPlaceholder, getInputValue } from '../../utils/inputs'\n\ntype Props = {\n  index: number,\n  operator?: string,\n  placeholder?: string,\n  placeholderMap?: { [key: string]: string | Array<string> },\n  styleClassMap: StyleClassMap,\n  value: string,\n  handleUpdate: (value: SingleValue, index: number) => void\n}\n\nclass Textarea extends React.Component<Props> {\n  static defaultProps = {\n    index: -1,\n    styleClassMap: {}\n  }\n\n  handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const {\n      index,\n      handleUpdate\n    } = this.props\n\n    const { target: { value } } = event\n\n    handleUpdate(value, index)\n  }\n\n  render () {\n    const {\n      index,\n      operator,\n      placeholder,\n      placeholderMap,\n      styleClassMap,\n      value\n    } = this.props\n\n    const addInputClass = styleClassMap.QuarterBackInput != null\n      ? styleClassMap.QuarterBackInput\n      : ''\n\n    const addClass = styleClassMap.QuarterBackTextarea != null\n      ? styleClassMap.QuarterBackTextarea\n      : ''\n\n    return (\n      <textarea\n        className={`QuarterBackText ${addInputClass} ${addClass}`}\n        placeholder={getInputPlaceholder(\n          placeholder,\n          placeholderMap,\n          operator,\n          index\n        )}\n        value={getInputValue(value)}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nexport default Textarea\n","// @flow\nimport * as React from 'react'\nimport type { Field } from '../utils/Field'\nimport type { Rule } from '../utils/Rule'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { MultiValue, NestedMultiValue } from '../utils/Value'\nimport {\n  FIELD_INPUT_TEXT,\n  FIELD_INPUT_NUMBER,\n  FIELD_INPUT_TEXTAREA,\n  FIELD_INPUT_RADIO,\n  FIELD_INPUT_CHECKBOX,\n  FIELD_INPUT_SELECT\n} from '../utils/constants'\nimport { getFieldComponent } from '../utils/fields'\nimport Checkboxes from './inputs/Checkboxes'\nimport Radios from './inputs/Radios'\nimport Select from './inputs/Select'\nimport Separator from './inputs/Separator'\nimport Text from './inputs/Text'\nimport Textarea from './inputs/Textarea'\n\ntype Props = {\n  field: Field,\n  inputsSeparator: string,\n  operator: string,\n  styleClassMap: StyleClassMap,\n  values: MultiValue | NestedMultiValue,\n  handleUpdate: (data: Rule, index: number) => void\n}\n\nclass QuarterBackInputs extends React.Component<Props> {\n  render () {\n    const {\n      field,\n      inputsSeparator,\n      operator,\n      styleClassMap,\n      values,\n      handleUpdate\n    } = this.props\n\n    const numValues = values.length\n\n    switch (field.input) {\n      case FIELD_INPUT_CHECKBOX:\n        const CheckboxesComponent = getFieldComponent(field, Checkboxes)\n\n        return values.map((value, index) => {\n          return [\n            <CheckboxesComponent\n              key={index}\n              index={index}\n              opts={field.opts}\n              styleClassMap={styleClassMap}\n              value={value}\n              values={field.values}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      case FIELD_INPUT_NUMBER:\n      case FIELD_INPUT_TEXT:\n        const TextComponent = getFieldComponent(field, Text)\n\n        return values.map((value, index) => {\n          return [\n            <TextComponent\n              key={index}\n              index={index}\n              operator={operator}\n              opts={field.opts}\n              placeholder={field.placeholder}\n              placeholderMap={field.placeholderMap}\n              styleClassMap={styleClassMap}\n              type={field.type}\n              value={value}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      case FIELD_INPUT_RADIO:\n        const RadiosComponent = getFieldComponent(field, Radios)\n\n        return values.map((value, index) => {\n          return [\n            <RadiosComponent\n              key={index}\n              index={index}\n              opts={field.opts}\n              styleClassMap={styleClassMap}\n              value={value}\n              values={field.values}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      case FIELD_INPUT_SELECT:\n        const SelectComponent = getFieldComponent(field, Select)\n\n        return values.map((value, index) => {\n          return [\n            <SelectComponent\n              key={index}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              multiple={field.multiple}\n              opts={field.opts}\n              styleClassMap={styleClassMap}\n              value={value}\n              values={field.values}\n              type={field.type}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      case FIELD_INPUT_TEXTAREA:\n        const TextareaComponent = getFieldComponent(field, Textarea)\n\n        return values.map((value, index) => {\n          return [\n            <TextareaComponent\n              key={index}\n              index={index}\n              operator={operator}\n              opts={field.opts}\n              placeholder={field.placeholder}\n              placeholderMap={field.placeholderMap}\n              styleClassMap={styleClassMap}\n              type={field.input}\n              value={value}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n      default:\n        const CustomComponent = field.QBComponent\n\n        if (CustomComponent == null) {\n          throw new Error('Unable to find input')\n        }\n\n        return values.map((value, index) => {\n          return [\n            <CustomComponent\n              key={index}\n              index={index}\n              opts={field.opts}\n              value={value}\n              styleClassMap={styleClassMap}\n              type={field.input}\n              values={field.values}\n              handleUpdate={handleUpdate}\n            />,\n            <Separator\n              key={-index - 1}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              numValues={numValues}\n              styleClassMap={styleClassMap}\n            />\n          ]\n        })\n    }\n  }\n}\n\nexport default QuarterBackInputs\n","// @flow\nimport * as React from 'react'\nimport type { Field } from '../utils/Field'\nimport type { Operator } from '../utils/Operator'\nimport type { Rule } from '../utils/Rule'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { NonEmptyValue } from '../../utils/Value'\nimport { insertAt } from '../utils/arrays'\nimport { getOperatorById } from '../utils/operators'\nimport { getInputValues } from '../utils/values'\nimport QuarterBackInputs from './QuarterBackInputs'\n\ntype Props = {\n  field: Field,\n  index: number,\n  inputsSeparator: string,\n  operators: Array<Operator>,\n  rule: Rule,\n  styleClassMap: StyleClassMap,\n  handleUpdate: (data: Rule, index: number) => void\n}\n\nclass QuarterBackValues extends React.Component<Props> {\n  handleUpdate = (value: NonEmptyValue, valueIndex: number) => {\n    const {\n      field,\n      index,\n      operators,\n      rule,\n      handleUpdate\n    } = this.props\n\n    const operator = getOperatorById(rule.operator, operators)\n    const values = getInputValues(field, operator, rule)\n    const updatedValues = insertAt(values, valueIndex, value)\n\n    const data = {\n      ...rule,\n      value: updatedValues.length === 1 ? updatedValues[0] : updatedValues\n    }\n\n    handleUpdate(data, index)\n  }\n\n  render () {\n    const {\n      field,\n      inputsSeparator,\n      operators,\n      rule,\n      styleClassMap\n    } = this.props\n\n    const operator = getOperatorById(rule.operator, operators)\n    const values = getInputValues(field, operator, rule)\n\n    if (values === null) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackValues || ''\n\n    return (\n      <div className={`QuarterBackValues ${addClass}`}>\n        <QuarterBackInputs\n          field={field}\n          inputsSeparator={inputsSeparator}\n          operator={operator.id}\n          styleClassMap={styleClassMap}\n          values={values}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackValues\n","// @flow\nimport * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { Rule } from '../utils/Rule'\nimport type { OperatorsConfig } from '../utils/OperatorsConfig'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport { getFieldById } from '../utils/fields'\nimport { getAllOperators } from '../utils/operators'\nimport QuarterBackFields from './QuarterBackFields'\nimport QuarterBackOperators from './QuarterBackOperators'\nimport QuarterBackValues from './QuarterBackValues'\nimport QuarterBackActionDelete from './QuarterBackActionDelete'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  fields: Array<Field>,\n  index: number,\n  inputsSeparator: string,\n  lang: Object,\n  operatorsConfig: OperatorsConfig,\n  rule: Rule,\n  selectPlaceholder: string,\n  styleClassMap: StyleClassMap,\n  handleUpdate: (data: Data, index: number) => void,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackRule extends React.Component<Props> {\n  render () {\n    const {\n      actionIconMap,\n      fields,\n      index,\n      inputsSeparator,\n      lang,\n      operatorsConfig,\n      rule,\n      selectPlaceholder,\n      styleClassMap,\n      handleUpdate,\n      handleDelete\n    } = this.props\n\n    const field = getFieldById(fields, rule.id)\n    const operators = getAllOperators(operatorsConfig)\n\n    const addRuleClass = styleClassMap.QuarterBackRule != null\n      ? styleClassMap.QuarterBackRule\n      : ''\n\n    const addRuleEditClass = styleClassMap.QuarterBackRuleEdit != null\n      ? styleClassMap.QuarterBackRuleEdit\n      : ''\n\n    const addRuleDeletedClass = styleClassMap.QuarterBackRuleDeleted != null\n      ? styleClassMap.QuarterBackRuleDeleted\n      : ''\n\n    const addRuleActionsClass = styleClassMap.QuarterBackRuleActions != null\n      ? styleClassMap.QuarterBackRuleActions\n      : ''\n\n    return (\n      <div className={`QuarterBackRule ${addRuleClass}`}>\n        {field && field.deleted\n          ? <div className={`QuarterBackRuleEdit QuarterBackRuleDeleted ${addRuleEditClass} ${addRuleDeletedClass}`}>\n            <span>{field.deletedText || `\"${field.label}\" field was deleted`}</span>\n          </div>\n          : <div className={`QuarterBackRuleEdit ${addRuleEditClass}`}>\n            <QuarterBackFields\n              fields={fields}\n              index={index}\n              operators={operators}\n              rule={rule}\n              selectPlaceholder={selectPlaceholder}\n              styleClassMap={styleClassMap}\n              handleUpdate={handleUpdate}\n            />\n            <QuarterBackOperators\n              field={field}\n              index={index}\n              lang={lang}\n              operators={operators}\n              rule={rule}\n              styleClassMap={styleClassMap}\n              handleUpdate={handleUpdate}\n            />\n            <QuarterBackValues\n              field={field}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              operators={operators}\n              rule={rule}\n              styleClassMap={styleClassMap}\n              handleUpdate={handleUpdate}\n            />\n          </div>}\n        <div className={`QuarterBackRuleActions ${addRuleActionsClass}`}>\n          <QuarterBackActionDelete\n            actionIconMap={actionIconMap}\n            index={index}\n            styleClassMap={styleClassMap}\n            handleDelete={handleDelete}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackRule\n","// @flow\nimport * as React from 'react'\nimport type { Data } from '../utils/Data'\nimport type { GroupRulesFragment } from '../utils/Group'\nimport type { RulesProps } from '../utils/Rules'\nimport { insertAt, removeAt } from '../utils/arrays'\nimport { QB_RULE, QB_GROUP } from '../utils/constants'\nimport { getTypeByQB } from '../utils/types'\nimport QuarterBackRule from './QuarterBackRule'\nimport QuarterBackGroup from './QuarterBackGroup'\n\nclass QuarterBackRules extends React.Component<RulesProps> {\n  /**\n   * Takes a modified group or rule and index and overwrites a copy of\n   * the current rules prop at the specified index. Passes the modified\n   * rules copy to parent\n   */\n  handleUpdate = (data: Data, index: number) => {\n    const {\n      rules,\n      handleUpdate\n    } = this.props\n\n    const groupRulesFragment: GroupRulesFragment = {\n      rules: insertAt(rules, index, data)\n    }\n\n    handleUpdate(groupRulesFragment)\n  }\n\n  /**\n   * Takes an index and removes the rule or group in a copy of the current\n   * rules prop at the specified index. Passes the modified rules copy to\n   * parent\n   */\n  handleDelete = (index: number) => {\n    const {\n      rules,\n      handleUpdate\n    } = this.props\n\n    const groupRulesFragment: GroupRulesFragment = {\n      rules: removeAt(rules, index)\n    }\n\n    handleUpdate(groupRulesFragment)\n  }\n\n  render () {\n    const {\n      actionIconMap,\n      conditions,\n      fields,\n      filterTypes,\n      inputsSeparator,\n      lang,\n      operatorsConfig,\n      rules,\n      softFilterTypes,\n      selectPlaceholder,\n      styleClassMap,\n      types\n    } = this.props\n\n    if (rules.length < 1) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackRules != null\n      ? styleClassMap.QuarterBackRules\n      : ''\n\n    return (\n      <div className={`QuarterBackRules ${addClass}`}>\n        {rules.map((data, index) => {\n          const { QB, condition } = data\n\n          // \"Old\" rule data from jQuery plugin will not have \"condition\"\n          // key\n          if (QB === QB_RULE || condition === undefined) {\n            return (\n              <QuarterBackRule\n                key={index}\n                QB={QB_RULE}\n                actionIconMap={actionIconMap}\n                fields={fields}\n                index={index}\n                inputsSeparator={inputsSeparator}\n                lang={lang}\n                operatorsConfig={operatorsConfig}\n                rule={data}\n                selectPlaceholder={selectPlaceholder}\n                styleClassMap={styleClassMap}\n                handleUpdate={this.handleUpdate}\n                handleDelete={this.handleDelete}\n              />\n            )\n          }\n\n          // \"Old\" group data from jQuery plugin _will_ have a \"condition\" key\n          if (\n            (QB === QB_GROUP) ||\n            (QB === undefined && condition !== undefined)\n          ) {\n            return (\n              <QuarterBackGroup\n                key={index}\n                QB={QB_GROUP}\n                actionIconMap={actionIconMap}\n                conditions={conditions}\n                defaultCondition={this.props.defaultCondition}\n                fields={fields}\n                filterTypes={filterTypes}\n                group={data}\n                index={index}\n                inputsSeparator={inputsSeparator}\n                lang={lang}\n                operatorsConfig={operatorsConfig}\n                selectPlaceholder={selectPlaceholder}\n                softFilterTypes={softFilterTypes}\n                styleClassMap={styleClassMap}\n                types={types}\n                handleUpdate={this.handleUpdate}\n                handleDelete={this.handleDelete}\n              />\n            )\n          }\n\n          const type = getTypeByQB(types, QB)\n\n          if (!type) {\n            throw new Error('Unable to find type')\n          }\n\n          const {\n            action,\n            actionAddClass,\n            actionIcon,\n            defaultCondition = this.props.defaultCondition,\n            ...typeProps\n          } = type\n\n          return (\n            <QuarterBackGroup\n              {...typeProps}\n              key={index}\n              actionIconMap={actionIconMap}\n              defaultCondition={defaultCondition}\n              filterTypes={filterTypes}\n              group={data}\n              index={index}\n              inputsSeparator={inputsSeparator}\n              lang={lang}\n              operatorsConfig={operatorsConfig}\n              selectPlaceholder={selectPlaceholder}\n              softFilterTypes={softFilterTypes}\n              styleClassMap={styleClassMap}\n              handleUpdate={this.handleUpdate}\n              handleDelete={this.handleDelete}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackRules\n","// @flow\nimport * as React from 'react'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\n\ntype Props = {\n  styleClassMap: StyleClassMap,\n  title?: string\n}\n\nclass QuarterBackTitle extends React.Component<Props> {\n  render () {\n    const {\n      styleClassMap,\n      title\n    } = this.props\n\n    if (!title) {\n      return null\n    }\n\n    const addClass = styleClassMap.QuarterBackTitle != null\n      ? styleClassMap.QuarterBackTitle\n      : ''\n\n    return (\n      <div className={`QuarterBackTitle ${addClass}`}>{title}</div>\n    )\n  }\n}\n\nexport default QuarterBackTitle\n","// @flow\nimport * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Condition } from '../utils/Condition'\nimport type { Data } from '../utils/Data'\nimport type { Field } from '../utils/Field'\nimport type { Group, GroupFragment, GroupRulesFragment } from '../utils/Group'\nimport type { OperatorsConfig } from '../utils/OperatorsConfig'\nimport type { RulesProps } from '../utils/Rules'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport { andCondition, orCondition } from '../utils/conditions'\nimport { QB_GROUP } from '../utils/constants'\nimport QuarterBackHeader from './QuarterBackHeader'\nimport QuarterBackRules from './QuarterBackRules'\nimport QuarterBackTitle from './QuarterBackTitle'\n\ntype Props = {\n  QB: string,\n  QBComponent?: React.ComponentType<RulesProps>,\n  actionIconMap: ActionIconMap,\n  conditions: Array<Condition>,\n  defaultCondition: string,\n  fields: Array<Field>,\n  filterTypes: Array<string>,\n  group: Group,\n  index: number,\n  inputsSeparator: string,\n  lang: Object,\n  operatorsConfig: OperatorsConfig,\n  selectPlaceholder: string,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  title?: string,\n  types: Array<Type>,\n  handleUpdate: (group: Group, index: number) => void,\n  handleDelete: (index: number) => void\n}\n\nclass QuarterBackGroup extends React.Component<Props> {\n  static defaultProps = {\n    QB: QB_GROUP,\n    conditions: [andCondition, orCondition],\n    fields: [],\n    index: -1,\n    types: [],\n    handleDelete: (index: number) => {}\n  }\n\n  /**\n   * Takes a new group or rule and appends it to a copy of the current\n   * group's rules prop. Passes the modified rules copy to update\n   * method\n   */\n  handleCreate = (data: Data) => {\n    const { group: { rules } } = this.props\n\n    const groupRulesFragment: GroupRulesFragment = {\n      rules: [...rules, data]\n    }\n\n    this.handleUpdate(groupRulesFragment)\n  }\n\n  /**\n   * Takes a group fragment and merges it with a copy of the current\n   * group prop. Passes the modified group copy to parent\n   */\n  handleUpdate = (fragment: GroupFragment) => {\n    const {\n      QB,\n      group,\n      index,\n      handleUpdate\n    } = this.props\n\n    const updatedGroup = {\n      QB,\n      ...group,\n      ...fragment\n    }\n\n    handleUpdate(updatedGroup, index)\n  }\n\n  render () {\n    const {\n      QB,\n      QBComponent,\n      actionIconMap,\n      conditions,\n      defaultCondition,\n      fields,\n      filterTypes,\n      group,\n      index,\n      inputsSeparator,\n      lang,\n      operatorsConfig,\n      selectPlaceholder,\n      softFilterTypes,\n      styleClassMap,\n      title,\n      types,\n      handleDelete\n    } = this.props\n\n    if (filterTypes.includes(QB)) {\n      return null\n    }\n\n    const RulesComponent = QBComponent != null\n      ? QBComponent\n      : QuarterBackRules\n\n    const addClass = styleClassMap.QuarterBackGroup != null\n      ? styleClassMap.QuarterBackGroup\n      : ''\n\n    return (\n      <div className={`QuarterBackGroup ${addClass}`}>\n        <QuarterBackTitle\n          styleClassMap={styleClassMap}\n          title={title}\n        />\n        <QuarterBackHeader\n          actionIconMap={actionIconMap}\n          condition={group.condition}\n          conditions={conditions}\n          defaultCondition={defaultCondition}\n          fields={fields}\n          filterTypes={filterTypes}\n          index={index}\n          softFilterTypes={softFilterTypes}\n          styleClassMap={styleClassMap}\n          types={types}\n          handleCreate={this.handleCreate}\n          handleUpdate={this.handleUpdate}\n          handleDelete={handleDelete}\n        />\n        <RulesComponent\n          actionIconMap={actionIconMap}\n          conditions={conditions}\n          defaultCondition={defaultCondition}\n          fields={fields}\n          filterTypes={filterTypes}\n          inputsSeparator={inputsSeparator}\n          lang={lang}\n          operatorsConfig={operatorsConfig}\n          rules={group.rules}\n          selectPlaceholder={selectPlaceholder}\n          softFilterTypes={softFilterTypes}\n          styleClassMap={styleClassMap}\n          types={types}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBackGroup\n","// @flow\nimport type { Condition } from './Condition'\n\nconst andCondition: Condition = {\n  display: 'And',\n  value: 'AND'\n}\n\nconst orCondition: Condition = {\n  display: 'Or',\n  value: 'OR'\n}\n\nexport {\n  andCondition,\n  orCondition\n}\n","import * as React from 'react'\nimport type { ActionIconMap } from '../utils/ActionIconMap'\nimport type { Condition } from '../utils/Condition'\nimport type { Field } from '../utils/Field'\nimport type { Group } from '../utils/Group'\nimport type { OperatorsConfig } from '../utils/OperatorsConfig'\nimport type { StyleClassMap } from '../utils/StyleClassMap'\nimport type { Type } from '../utils/Type'\nimport { groupAction } from '../utils/actions'\nimport QuarterBackGroup from './QuarterBackGroup'\n\ntype Props = {\n  actionIconMap: ActionIconMap,\n  conditions?: Array<Condition>,\n  defaultCondition: string,\n  fields?: Array<Field>,\n  filterTypes: Array<string>,\n  inputsSeparator: string,\n  lang: Object,\n  operatorsConfig: OperatorsConfig,\n  rules?: Group,\n  selectPlaceholder: string,\n  softFilterTypes: Array<string>,\n  styleClassMap: StyleClassMap,\n  types?: Array<Type>,\n  handleUpdate: (data: Group) => void\n}\n\nclass QuarterBack extends React.Component<Props> {\n  static defaultProps = {\n    actionIconMap: {},\n    defaultCondition: 'AND',\n    filterTypes: [],\n    inputsSeparator: ',',\n    lang: {},\n    operatorsConfig: {},\n    selectPlaceholder: '------',\n    softFilterTypes: [],\n    styleClassMap: {},\n    handleUpdate: (data: Group, index: number) => {}\n  }\n\n  constructor (props: Props) {\n    super(props)\n\n    const {\n      defaultCondition,\n      fields,\n      rules\n    } = props\n\n    const group = groupAction.getDefaultData(\n      fields,\n      defaultCondition\n    )\n\n    this.state = {\n      ...group,\n      ...rules\n    }\n  }\n\n  handleUpdate = (data: Group) => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        ...data\n      }\n    }, () => this.props.handleUpdate(this.state))\n  }\n\n  render () {\n    const {\n      actionIconMap,\n      conditions,\n      defaultCondition,\n      fields,\n      filterTypes,\n      inputsSeparator,\n      lang,\n      operatorsConfig,\n      selectPlaceholder,\n      softFilterTypes,\n      styleClassMap,\n      types\n    } = this.props\n\n    const addClass = styleClassMap.QuarterBack != null\n      ? styleClassMap.QuarterBack\n      : ''\n\n    return (\n      <div className={`QuarterBack ${addClass}`}>\n        <QuarterBackGroup\n          actionIconMap={actionIconMap}\n          conditions={conditions}\n          defaultCondition={defaultCondition}\n          fields={fields}\n          filterTypes={filterTypes}\n          group={this.state}\n          inputsSeparator={inputsSeparator}\n          lang={lang}\n          operatorsConfig={operatorsConfig}\n          selectPlaceholder={selectPlaceholder}\n          softFilterTypes={softFilterTypes}\n          styleClassMap={styleClassMap}\n          types={types}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default QuarterBack\n","import { ruleAction, groupAction } from './utils/actions'\nimport { QB_RULE, QB_GROUP } from './utils/constants'\nimport QuarterBack from './components/QuarterBack'\nimport QuarterBackHeader from './components/QuarterBackHeader'\nimport QuarterBackTitle from './components/QuarterBackTitle'\nimport Checkbox from './components/inputs/Checkbox'\nimport Checkboxes from './components/inputs/Checkboxes'\nimport Select from './components/inputs/Select'\nimport Text from './components/inputs/Text'\n\nexport default QuarterBack\n\nexport {\n  QB_RULE,\n  QB_GROUP,\n  ruleAction,\n  groupAction,\n  QuarterBackHeader,\n  QuarterBackTitle,\n  Checkbox,\n  Checkboxes,\n  Select,\n  Text\n}\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'glyphicons-only-bootstrap/css/bootstrap.css'\nimport './App.css'\nimport './lib/components/styles/QuarterBack.css'\nimport './lib/components/styles/QuarterBackClassic.css'\nimport QuarterBack, { ruleAction, Checkboxes, Select, Text } from './lib'\n\nclass PowerGroup extends Component {\n  handleUpdate = (value, index) => {\n    const rule = { ...this.props.rules[index], value }\n    const rules = Object.assign([], [...this.props.rules], { [index]: rule })\n    this.props.handleUpdate({ rules })\n  }\n\n  render () {\n    const searchValue = this.props.rules[0].value\n    const typeValue = this.props.rules[1].value\n\n    return (\n      <div className='QuarterBackRules'>\n        <Text\n          index={0}\n          styleClassMap={{QuarterBackInput: 'form-control'}}\n          value={searchValue}\n          handleUpdate={this.handleUpdate}\n        />\n        <Checkboxes\n          index={1}\n          value={typeValue}\n          values={[\n            { label: 'Book', value: 'book' },\n            { label: 'Movie', value: 'movie' }\n          ]}\n          handleUpdate={this.handleUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nclass AsyncSelect extends Component {\n  state = {\n    loading: true,\n    values: []\n  }\n\n  componentDidMount () {\n    setTimeout(() => {\n      // this.props.handleUpdate('penguin', this.props.index)\n\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          loading: false,\n          values: [\n            { label: 'Penguin', value: 'penguin' },\n            { label: 'Pearson', value: 'pearson' }\n          ]\n        }\n      })\n    }, 5e2)\n  }\n\n  render () {\n    const {opts} = this.props\n    const borderColor = opts && opts.borderColor\n      ? opts.borderColor\n      : 'transparent'\n\n    if (this.state.loading) {\n      return <p style={{border: `1px solid ${borderColor}`}}>Loading&hellip;</p>\n    }\n\n    const props = {\n      ...this.props,\n      values: this.state.values\n    }\n\n    return <Select {...props} />\n  }\n}\n\nconst book = {\n  QB: 'Book',\n  fields: [\n    {\n      id: 'title',\n      label: 'Title',\n      input: 'text',\n      opts: {\n        color: 'blue'\n      },\n      type: 'string',\n      placeholder: 'Title...',\n      placeholderMap: {\n        proximity: ['Title...', 'Word distance']\n      }\n    },\n    { id: 'pub_year', label: 'Year Published', input: 'number', type: 'integer' },\n    { id: 'pages', label: 'Number of Pages', input: 'number', type: 'integer' },\n    { id: 'genre',\n      label: 'Genre',\n      input: 'select',\n      multiple: true,\n      type: 'string',\n      values: [\n        { label: 'Sci-Fi', value: 'scifi' },\n        { label: 'Romance', value: 'romance' }\n      ] },\n    {\n      QBComponent: AsyncSelect,\n      id: 'publisher',\n      label: 'Publisher',\n      opts: {\n        borderColor: 'red'\n      },\n      input: 'select',\n      type: 'string',\n      defaultValue: 'penguin'\n    }\n  ],\n  title: 'Book Query'\n}\n\nconst movieAction = {\n  QB: 'Movie',\n  display: 'Add movie',\n  getDefaultData: function () {\n    return {\n      QB: this.QB,\n      condition: '',\n      rules: [ruleAction.getDefaultData()]\n    }\n  }\n}\nconst movie = {\n  QB: 'Movie',\n  action: movieAction,\n  fields: [\n    { id: 'title', label: 'Title', input: 'text', type: 'string' },\n    { id: 'rel_year', label: 'Year Released', input: 'number', type: 'integer' },\n    { id: 'duration', label: 'Running time (mins)', input: 'number', type: 'integer' },\n    { id: 'kw', label: 'Keywords', input: 'textarea', type: 'string' },\n    { id: 'genre',\n      label: 'Genre',\n      input: 'checkbox',\n      type: 'string',\n      values: [\n        { label: 'Sci-Fi', value: 'scifi' },\n        { label: 'Romance', value: 'romance' }\n      ] },\n    { id: 'rating',\n      label: 'Rating',\n      input: 'radio',\n      type: 'string',\n      values: [\n        { label: 'Good', value: 'good' },\n        { label: 'Bad', value: 'bad' },\n        { label: 'Ugly', value: 'ugly' }\n      ] },\n    {\n      label: 'Cast & Crew',\n      fields: [\n        { id: 'director', label: 'Director', input: 'text', type: 'string' },\n        { id: 'producer', label: 'Producer', input: 'text', type: 'string' }\n      ]\n    }\n  ],\n  title: 'Movie Query'\n}\n\nconst types = [book, movie, {\n  QB: 'Search',\n  QBComponent: PowerGroup,\n  action: {\n    QB: 'Search',\n    display: 'Add search',\n    getDefaultData: function () {\n      return {\n        QB: this.QB,\n        condition: '',\n        rules: [\n          {\n            QB: 'query_string',\n            field: 'qs',\n            id: 'qs',\n            input: 'search',\n            operator: 'equal',\n            type: 'string',\n            value: ''\n          },\n          {\n            QB: 'type',\n            field: 'qstype',\n            id: 'qstype',\n            input: 'checkbox',\n            operator: 'equal',\n            type: 'string',\n            value: []\n          }\n        ]\n      }\n    }\n  },\n  conditions: [],\n  title: 'Search'\n}]\n\nconst styleClassMap = {\n  QuarterBackConditions: 'btn-group',\n  QuarterBackCondition: 'btn btn-sm btn-primary',\n  QuarterBackConditionActive: 'active',\n  QuarterBackActions: 'btn-group',\n  QuarterBackAction: 'btn btn-sm',\n  QuarterBackActionCreate: 'btn-success',\n  QuarterBackActionDelete: 'btn-danger',\n  QuarterBackSelect: 'form-control',\n  QuarterBackText: 'form-control',\n  QuarterBackTextarea: 'form-control'\n}\n\nconst actionIconMap = {\n  QuarterBackActionRule: () => <i className='glyphicon glyphicon-plus' />,\n  QuarterBackActionCreate: () => <i className='glyphicon glyphicon-plus-sign' />,\n  QuarterBackActionDelete: () => <i className='glyphicon glyphicon-remove' />\n}\n\n// const data = {\n//   condition: 'or',\n//   rules: [\n//     {\n//       QB: QB_RULE,\n//       id: 'title',\n//       operator: 'equal',\n//       value: 'Where the red fern grows'\n//     },\n//     {\n//       QB: QB_GROUP,\n//       condition: 'and',\n//       rules: [\n//         { QB: QB_RULE, id: 'pub_year', operator: 'less', value: '1962' },\n//         { QB: QB_RULE, id: 'pages', operator: 'greater', value: '200' }\n//       ]\n//     }\n//   ]\n// }\n\nclass App extends Component {\n  state = {}\n\n  handleUpdate = data => {\n    this.setState(prevState => ({ ...prevState, data }))\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <QuarterBack\n          actionIconMap={actionIconMap}\n          handleUpdate={this.handleUpdate}\n          lang={{\n            operators: {\n              not_in: 'does not contain'\n            }\n          }}\n          operatorsConfig={{\n            add: [\n              {\n                id: 'proximity',\n                meta: {\n                  fieldTypes: ['string'],\n                  multipleValuesAllowed: false,\n                  numberOfInputs: 2\n                }\n              }\n            ],\n            exclude: ['ends_with']\n          }}\n          styleClassMap={styleClassMap}\n          types={types}\n        />\n        <pre>{JSON.stringify(this.state.data, null, 2)}</pre>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}